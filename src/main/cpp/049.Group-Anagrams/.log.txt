
warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="28",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",macro-info="0"
^done
&"complete downbp\n"
~"downbp\n"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000001789",func="Solution::anagrams(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="31",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:31"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/a.out 

Breakpoint 1, Solution::anagrams (this=0x7fffffffd9ff, strs=std::vector of length 6, capacity 6 = {...}) at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555555789\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555555789",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555555789",func="Solution::anagrams(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="31",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:31"}]}
&"complete pv\n"
~"pvector\n"
^done
[Inferior 1 (process 19669) exited normally]
^error,msg="No registers."
^done,line="33",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",macro-info="0"
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/a.out 

Breakpoint 1, Solution::anagrams (this=0x7fffffffd9ff, strs=std::vector of length 6, capacity 6 = {...}) at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555555789\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555555789",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555555789",func="Solution::anagrams(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="31",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:31"}]}
[Inferior 1 (process 19680) exited normally]
^error,msg="No registers."
^done,line="33",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",macro-info="0"
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/a.out 

Breakpoint 1, Solution::anagrams (this=0x7fffffffd9ff, strs=std::vector of length 6, capacity 6 = {...}) at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555555789\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555555789",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555555789",func="Solution::anagrams(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="31",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:31"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555555789",func="Solution::anagrams(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="31",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:31"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x00005555555552e5",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="40",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:40"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/a.out 

Breakpoint 2, main () at solution.cpp:40
~"\n\032\032frame-begin 0 0x5555555552e5\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555552e5",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="40"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555555789",func="Solution::anagrams(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="31",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:31"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x00005555555552e5",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="40",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:40"}]}
Solution::anagrams (this=0x7fffffffd9ff, strs=std::vector of length 6, capacity 6 = {...}) at solution.cpp:10
~"\n\032\032frame-begin 0 0x5555555555bd\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555555bd",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="10"}
~"\n\032\032frame-begin 0 0x5555555555cc\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555555cc",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="12"}
~"\n\032\032frame-begin 0 0x5555555555d8\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555555d8",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="13"}
~"\n\032\032frame-begin 0 0x5555555555e4\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555555e4",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="14"}
~"\n\032\032frame-begin 0 0x5555555555f3\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555555f3",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555555623\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555555623",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555555650\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555555650",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555555676\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555555676",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="19"}
~"\n\032\032frame-begin 0 0x5555555556b4\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556b4",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="21"}
~"\n\032\032frame-begin 0 0x5555555556b4\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556b4",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="21"}
~"\n\032\032frame-begin 0 0x5555555556b4\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556b4",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="21"}
~"\n\032\032frame-begin 0 0x5555555556b4\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556b4",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="21"}
&"complete pma\n"
~"pmap\n"
~"pmap_member\n"
^done
&"complete pmap an\n"
~"pmap anagram\n"
~"pmap any_debug\n"
^done
~"\n\032\032frame-begin 0 0x5555555556b4\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556b4",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="21"}
&"complete p anagr\n"
~"p anagram\n"
^done
~"\n\032\032frame-begin 0 0x5555555556b4\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556b4",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="21"}
&"complete pma\n"
~"pmap\n"
~"pmap_member\n"
^done
&"complete pmap ana\n"
~"pmap anagram\n"
^done
~"\n\032\032frame-begin 0 0x5555555556b4\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556b4",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="21"}
~"\n\032\032frame-begin 0 0x5555555556b4\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556b4",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="21"}
~"\n\032\032frame-begin 0 0x55555555577d\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555577d",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555555623\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555555623",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555555650\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555555650",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555555676\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555555676",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="19"}
~"\n\032\032frame-begin 0 0x5555555556d7\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556d7",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="25"}
~"\n\032\032frame-begin 0 0x5555555556d7\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556d7",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="25"}
~"\n\032\032frame-begin 0 0x5555555556d7\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556d7",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="25"}
~"\n\032\032frame-begin 0 0x5555555556d7\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556d7",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="25"}
&"complete pma\n"
~"pmap\n"
~"pmap_member\n"
^done
~"\n\032\032frame-begin 0 0x5555555556f5\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555556f5",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="27"}
&"complete pmap anag\n"
~"pmap anagram\n"
^done
&"complete pm\n"
~"pmap\n"
~"pmap_member\n"
^done
&"complete pmap\n"
~"pmap\n"
~"pmap_member\n"
^done
&"complete pmap_m\n"
~"pmap_member\n"

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.
^done
&"complete p ana\n"
~"p anagram\n"
^done
&"complete \n"
~"!\n"
~"+\n"
~"-\n"
~"<\n"
~">\n"
~"actions\n"
~"add-auto-load-safe-path\n"
~"add-auto-load-scripts-directory\n"
~"add-inferior\n"
~"add-symbol-file\n"
~"add-symbol-file-from-memory\n"
~"advance\n"
~"agent-printf\n"
~"alias\n"
~"append\n"
~"apropos\n"
~"attach\n"
~"awatch\n"
~"backtrace\n"
~"bookmark\n"
~"break\n"
~"break-range\n"
~"bt\n"
~"call\n"
~"catch\n"
~"cd\n"
~"checkpoint\n"
~"clear\n"
~"clone-inferior\n"
~"collect\n"
~"commands\n"
~"compare-sections\n"
~"compile\n"
~"complete\n"
~"condition\n"
~"continue\n"
~"core-file\n"
~"define\n"
~"delete\n"
~"demangle\n"
~"detach\n"
~"directory\n"
~"disable\n"
~"disassemble\n"
~"disconnect\n"
~"display\n"
~"document\n"
~"dont-repeat\n"
~"down\n"
~"down-silently\n"
~"downbp\n"
~"dprintf\n"
~"dump\n"
~"echo\n"
~"edit\n"
~"enable\n"
~"end\n"
~"eval\n"
~"exec-file\n"
~"explore\n"
~"expression\n"
~"file\n"
~"find\n"
~"finish\n"
~"flash-erase\n"
~"flushregs\n"
~"focus\n"
~"forward-search\n"
~"frame\n"
~"fs\n"
~"ftrace\n"
~"function\n"
~"generate-core-file\n"
~"goto-bookmark\n"
~"guile\n"
~"guile-repl\n"
~"handle\n"
~"hbreak\n"
~"help\n"
~"if\n"
~"ignore\n"
~"inferior\n"
~"info\n"
~"init-if-undefined\n"
~"interpreter-exec\n"
~"interrupt\n"
~"jit-reader-load\n"
~"jit-reader-unload\n"
~"jump\n"
~"kill\n"
~"layout\n"
~"list\n"
~"load\n"
~"loadbp\n"
~"macro\n"
~"maintenance\n"
~"make\n"
~"mem\n"
~"monitor\n"
~"myloop_print\n"
~"new-ui\n"
~"next\n"
~"nexti\n"
~"ni\n"
~"nosharedlibrary\n"
~"output\n"
~"overlay\n"
~"passcount\n"
~"path\n"
~"pbitset\n"
~"pdequeue\n"
~"plist\n"
~"plist_member\n"
~"plistnode\n"
~"pmap\n"
~"pmap_member\n"
~"ppqueue\n"
~"pqueue\n"
~"print\n"
~"print-object\n"
~"printf\n"
~"pset\n"
~"pstack\n"
~"pstring\n"
~"ptype\n"
~"pvector\n"
~"pwd\n"
~"pwstring\n"
~"python\n"
~"python-interactive\n"
~"qbp\n"
~"queue-signal\n"
~"quit\n"
~"rbreak\n"
~"rc\n"
~"record\n"
~"refresh\n"
~"remote\n"
~"remove-inferiors\n"
~"remove-symbol-file\n"
~"restart\n"
~"restore\n"
~"return\n"
~"reverse-continue\n"
~"reverse-finish\n"
~"reverse-next\n"
~"reverse-nexti\n"
~"reverse-search\n"
~"reverse-step\n"
~"reverse-stepi\n"
~"rni\n"
~"rsi\n"
~"run\n"
~"rwatch\n"
~"save\n"
~"search\n"
~"section\n"
~"select-frame\n"
~"set\n"
~"sharedlibrary\n"
~"shell\n"
~"show\n"
~"si\n"
~"signal\n"
~"skip\n"
~"source\n"
~"start\n"
~"starti\n"
~"step\n"
~"stepi\n"
~"stepping\n"
~"stop\n"
~"strace\n"
~"symbol-file\n"
~"tabset\n"
~"target\n"
~"task\n"
~"tbreak\n"
~"tcatch\n"
~"tdump\n"
~"teval\n"
~"tfind\n"
~"thbreak\n"
~"thread\n"
~"tp\n"
~"trace\n"
~"tsave\n"
~"tstart\n"
~"tstatus\n"
~"tstop\n"
~"tty\n"
~"tui\n"
~"tvariable\n"
~"undisplay\n"
~"unset\n"
~"until\n"
~"up\n"
~"up-silently\n"
~"update\n"
~"watch\n"
~" *** List may be truncated, max-completions reached. ***\n"
^done
&"complete dis\n"
~"disable\n"
~"disassemble\n"
~"disconnect\n"
~"display\n"
^done
&"complete disabl\n"
~"disable\n"
^done
&"complete del\n"
~"delete\n"
^done
&"complete ba\n"
~"backtrace\n"
^done
&"complete bre\n"
~"break\n"
~"break-range\n"
^done
&"complete breaks\n"
^done
&"complete breakpo\n"
^done
&"complete breakpi\n"
^done
&"complete breakpo\n"
^done
&"complete breakpo\n"
^done
&"complete cle\n"
~"clear\n"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x00005555555552e5",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="40",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:40"}]}
~"\n\032\032frame-begin 0 0x555555555734\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555555734",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="28"}
~"\n\032\032frame-begin 0 0x55555555574d\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555574d",func="Solution::anagrams",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="30"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x00005555555552e5",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="40",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:40"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555532a",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="42",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:42"}]}

Breakpoint 3, main () at solution.cpp:42
~"\n\032\032frame-begin 0 0x55555555532a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555532a",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="42"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x00005555555552e5",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="40",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:40"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555532a",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp",line="42",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/049.Group-Anagrams/solution.cpp:42"}]}
&"complete pver\n"
^done
&"complete pv\n"
~"pvector\n"
^done
&"complete pv\n"
~"pvector\n"
^done
