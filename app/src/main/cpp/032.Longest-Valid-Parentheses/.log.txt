
warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="31",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:44
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
&"complete p in\n"
~"p in.h\n"
~"p in6_addr\n"
~"p in6_addr.c\n"
~"p in6addr_any\n"
~"p in6addr_loopback\n"
~"p in6addrinfo\n"
~"p in6ai_deprecated\n"
~"p in6ai_homeaddress\n"
~"p in6aicmp\n"
~"p in_addr\n"
~"p in_addr_t\n"
~"p in_pktinfo\n"
~"p in_port_t\n"
~"p index\n"
~"p inet.h\n"
~"p inet6_opt.c\n"
~"p inet6_opt_append\n"
~"p inet6_opt_find\n"
~"p inet6_opt_finish\n"
~"p inet6_opt_get_val\n"
~"p inet6_opt_init\n"
~"p inet6_opt_next\n"
~"p inet6_opt_set_val\n"
~"p inet6_option.c\n"
~"p inet6_option_alloc\n"
~"p inet6_option_append\n"
~"p inet6_option_find\n"
~"p inet6_option_init\n"
~"p inet6_option_next\n"
~"p inet6_option_space\n"
~"p inet6_rth.c\n"
~"p inet6_rth_add\n"
~"p inet6_rth_getaddr\n"
~"p inet6_rth_init\n"
~"p inet6_rth_reverse\n"
~"p inet6_rth_segments\n"
~"p inet6_rth_space\n"
~"p inet6_scopeid_pton.c\n"
~"p inet_addr\n"
~"p inet_addr.c\n"
~"p inet_aton\n"
~"p inet_lnaof\n"
~"p inet_lnaof.c\n"
~"p inet_makeaddr\n"
~"p inet_mkadr.c\n"
~"p inet_net.c\n"
~"p inet_netof\n"
~"p inet_netof.c\n"
~"p inet_network\n"
~"p inet_nsap_addr\n"
~"p inet_nsap_ntoa\n"
~"p inet_ntoa\n"
~"p inet_ntoa.c\n"
~"p inet_ntop\n"
~"p inet_ntop.c\n"
~"p inet_pton\n"
~"p inet_pton.c\n"
~"p inet_pton4\n"
~"p inf\n"
~"p inf_zero\n"
~"p infinity\n"
~"p infint\n"
~"p infosev\n"
~"p init\n"
~"p init-first.c\n"
~"p init-misc.c\n"
~"p init_cacheinfo\n"
~"p init_jk\n"
~"p init_module\n"
~"p init_t\n"
~"p init_tls\n"
~"p initgr_response_header\n"
~"p initgroups\n"
~"p initgroups.c\n"
~"p initgroups_dyn_function\n"
~"p initial\n"
~"p initial_quick\n"
~"p initializer_list\n"
~"p initstate\n"
~"p initstate_r\n"
~"p inline-hashtab.h\n"
~"p inlines.c\n"
~"p inmask\n"
~"p innetgr\n"
~"p innetgroup_response_header\n"
~"p ino64_t\n"
~"p ino_t\n"
~"p inotify_add_watch\n"
~"p inotify_init\n"
~"p inotify_init1\n"
~"p inotify_rm_watch\n"
~"p input\n"
~"p inroot\n"
~"p insert_module\n"
~"p insque\n"
~"p insremque.c\n"
~"p int\n"
~"p int const& std::max<int>(int const&, int const&)\n"
~"p int&& std::forward<int>(std::remove_reference<int>::type&)\n"
~"p int** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int*>(int* const*, int* const*, int**)\n"
~"p int** std::__copy_move_a2<false, int**, int**>(int**, int**, int**)\n"
~"p int** std::__copy_move_a<false, int**, int**>(int**, int**, int**)\n"
~"p int** std::__copy_move_backward<false, true, std::random_access_iterator_tag>::__copy_move_b<int*>(int* const*, int* const*, int**)\n"
~"p int** std::__copy_move_backward_a2<false, int**, int**>(int**, int**, int**)\n"
~"p int** std::__copy_move_backward_a<false, int**, int**>(int**, int**, int**)\n"
~"p int** std::__miter_base<int**>(int**)\n"
~"p int** std::__niter_base<int**>(int**)\n"
~"p int** std::copy<int**, int**>(int**, int**, int**)\n"
~"p int** std::copy_backward<int**, int**>(int**, int**, int**)\n"
~"p int-ll64.h\n"
~"p int16_t\n"
~"p int32_t\n"
~"p int4\n"
~"p int64_t\n"
~"p int8_t\n"
~"p int_curr_symbol\n"
~"p int_fast16_t\n"
~"p int_fast32_t\n"
~"p int_fast64_t\n"
~"p int_fast8_t\n"
~"p int_frac_digits\n"
~"p int_least16_t\n"
~"p int_least32_t\n"
~"p int_least64_t\n"
~"p int_least8_t\n"
~"p int_mallinfo\n"
~"p int_n_cs_precedes\n"
~"p int_n_sep_by_space\n"
~"p int_n_sign_posn\n"
~"p int_p_cs_precedes\n"
~"p int_p_sep_by_space\n"
~"p int_p_sign_posn\n"
~"p intel_02_cache_info\n"
~"p intel_02_known\n"
~"p intel_check_word\n"
~"p intel_check_word.isra\n"
~"p internal\n"
~"p internal_fallocate\n"
~"p internal_fallocate64\n"
~"p internal_fnmatch\n"
~"p internal_fnwmatch\n"
~"p internal_getgrouplist\n"
~"p internal_getut_r\n"
~"p internal_getut_r.constprop\n"
~"p internal_statvfs.c\n"
~"p internal_statvfs.h\n"
~"p internaltypes.h\n"
~"p interp.c\n"
~"p intmax_t\n"
~"p intptr_t\n"
~"p intr\n"
~"p inv16\n"
~"p inv_PI_4\n"
~"p invalid_characters\n"
~"p invalid_fn\n"
~"p invln2\n"
~"p invpio2\n"
~"p invpio4_table\n"
~"p invsqrtpi\n"
^done
1	/* Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring. */
2	/* For "(()", the longest valid parentheses substring is "()", which has length = 2. */
3	/* Another example is ")()())", where the longest valid parentheses substring is "()()", which has length = 4. */
4	#include <string>
5	#include <stack>
6	using namespace std;
7	class Solution 
8	{
9	public:
10	    int longestValidParentheses(string s) 
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="??"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
&"disassemble /s\n"
&"\n\032\032error-begin\n"
&"No function contains program counter for selected frame.\n"
~"\n\032\032error\n"
^error,msg="No function contains program counter for selected frame."
&"x/100i $pc\n"
~"=> 0x555555554d72:\tmov    $0x0,%eax\n"
~"   0x555555554d77:\tmov    -0x18(%rbp),%rcx\n"
~"   0x555555554d7b:\txor    %fs:0x28,%rcx\n"
~"   0x555555554d84:\tje     0x555555554dd2\n"
~"   0x555555554d86:\tjmp    0x555555554dcd\n"
~"   0x555555554d88:\tmov    %rax,%rbx\n"
~"   0x555555554d8b:\tlea    -0x65(%rbp),%rax\n"
~"   0x555555554d8f:\tmov    %rax,%rdi\n"
~"   0x555555554d92:\tcallq  0x555555554b40\n"
~"   0x555555554d97:\tmov    %rbx,%rax\n"
~"   0x555555554d9a:\tmov    %rax,%rdi\n"
~"   0x555555554d9d:\tcallq  0x555555554ba0\n"
~"   0x555555554da2:\tmov    %rax,%rbx\n"
~"   0x555555554da5:\tlea    -0x40(%rbp),%rax\n"
~"   0x555555554da9:\tmov    %rax,%rdi\n"
~"   0x555555554dac:\tcallq  0x555555554b00\n"
~"   0x555555554db1:\tjmp    0x555555554db6\n"
~"   0x555555554db3:\tmov    %rax,%rbx\n"
~"   0x555555554db6:\tlea    -0x60(%rbp),%rax\n"
~"   0x555555554dba:\tmov    %rax,%rdi\n"
~"   0x555555554dbd:\tcallq  0x555555554b00\n"
~"   0x555555554dc2:\tmov    %rbx,%rax\n"
~"   0x555555554dc5:\tmov    %rax,%rdi\n"
~"   0x555555554dc8:\tcallq  0x555555554ba0\n"
~"   0x555555554dcd:\tcallq  0x555555554b50\n"
~"   0x555555554dd2:\tadd    $0x68,%rsp\n"
~"   0x555555554dd6:\tpop    %rbx\n"
~"   0x555555554dd7:\tpop    %rbp\n"
~"   0x555555554dd8:\tretq   \n"
~"   0x555555554dd9:\tpush   %rbp\n"
~"   0x555555554dda:\tmov    %rsp,%rbp\n"
~"   0x555555554ddd:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554de1:\tmov    %rsi,-0x10(%rbp)\n"
~"   0x555555554de5:\tmov    -0x10(%rbp),%rax\n"
~"   0x555555554de9:\tpop    %rbp\n"
~"   0x555555554dea:\tretq   \n"
~"   0x555555554deb:\tpush   %rbp\n"
~"   0x555555554dec:\tmov    %rsp,%rbp\n"
~"   0x555555554def:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554df3:\tcmpq   $0x1ff,-0x8(%rbp)\n"
~"   0x555555554dfb:\tja     0x555555554e0d\n"
~"   0x555555554dfd:\tmov    $0x200,%eax\n"
~"   0x555555554e02:\tmov    $0x0,%edx\n"
~"   0x555555554e07:\tdivq   -0x8(%rbp)\n"
~"   0x555555554e0b:\tjmp    0x555555554e12\n"
~"   0x555555554e0d:\tmov    $0x1,%eax\n"
~"   0x555555554e12:\tpop    %rbp\n"
~"   0x555555554e13:\tretq   \n"
~"   0x555555554e14:\tpush   %rbp\n"
~"   0x555555554e15:\tmov    %rsp,%rbp\n"
~"   0x555555554e18:\tsub    $0x10,%rsp\n"
~"   0x555555554e1c:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554e20:\tmov    -0x8(%rbp),%rax\n"
~"   0x555555554e24:\tmov    %rax,%rdi\n"
~"   0x555555554e27:\tcallq  0x555555554fee\n"
~"   0x555555554e2c:\tnop\n"
~"   0x555555554e2d:\tleaveq \n"
~"   0x555555554e2e:\tretq   \n"
~"   0x555555554e2f:\tnop\n"
~"   0x555555554e30:\tpush   %rbp\n"
~"   0x555555554e31:\tmov    %rsp,%rbp\n"
~"   0x555555554e34:\tpush   %rbx\n"
~"   0x555555554e35:\tsub    $0x98,%rsp\n"
~"   0x555555554e3c:\tmov    %rdi,-0x98(%rbp)\n"
~"   0x555555554e43:\tmov    %rsi,-0xa0(%rbp)\n"
~"   0x555555554e4a:\tmov    %fs:0x28,%rax\n"
~"   0x555555554e53:\tmov    %rax,-0x18(%rbp)\n"
~"   0x555555554e57:\txor    %eax,%eax\n"
~"   0x555555554e59:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554e5d:\tmov    %rax,%rdi\n"
~"   0x555555554e60:\tcallq  0x555555554fd2\n"
~"   0x555555554e65:\tmovl   $0xffffffff,-0x80(%rbp)\n"
~"   0x555555554e6c:\tlea    -0x80(%rbp),%rdx\n"
~"   0x555555554e70:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554e74:\tmov    %rdx,%rsi\n"
~"   0x555555554e77:\tmov    %rax,%rdi\n"
~"   0x555555554e7a:\tcallq  0x55555555508c\n"
~"   0x555555554e7f:\tmovl   $0x0,-0x84(%rbp)\n"
~"   0x555555554e89:\tmovq   $0x0,-0x78(%rbp)\n"
~"   0x555555554e91:\tmov    -0xa0(%rbp),%rax\n"
~"   0x555555554e98:\tmov    %rax,%rdi\n"
~"   0x555555554e9b:\tcallq  0x555555554b10\n"
~"   0x555555554ea0:\tcmp    %rax,-0x78(%rbp)\n"
~"   0x555555554ea4:\tsetb   %al\n"
~"   0x555555554ea7:\ttest   %al,%al\n"
~"   0x555555554ea9:\tje     0x555555554f84\n"
~"   0x555555554eaf:\tmov    -0x78(%rbp),%rdx\n"
~"   0x555555554eb3:\tmov    -0xa0(%rbp),%rax\n"
~"   0x555555554eba:\tmov    %rdx,%rsi\n"
~"   0x555555554ebd:\tmov    %rax,%rdi\n"
~"   0x555555554ec0:\tcallq  0x555555554bc0\n"
~"   0x555555554ec5:\tmovzbl (%rax),%eax\n"
~"   0x555555554ec8:\tmov    %al,-0x85(%rbp)\n"
~"   0x555555554ece:\tcmpb   $0x28,-0x85(%rbp)\n"
~"   0x555555554ed5:\tjne    0x555555554ef6\n"
~"   0x555555554ed7:\tmov    -0x78(%rbp),%rax\n"
~"   0x555555554edb:\tmov    %eax,-0x80(%rbp)\n"
~"   0x555555554ede:\tlea    -0x80(%rbp),%rdx\n"
~"   0x555555554ee2:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554ee6:\tmov    %rdx,%rsi\n"
^done
31	                {
32	                    S.pop();
33	                    S.push(i);
34	                }
35	            }
36	        }
37	        return ans;
38	    }
39	};
40	int main(){
&"complete file a.\n"
~"file a.out\n"
^done
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="??"}
31	                {
32	                    S.pop();
33	                    S.push(i);
34	                }
35	            }
36	        }
37	        return ans;
38	    }
39	};
40	int main(){
&"complete lay\n"
~"layout\n"
^done
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="??"}

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="31",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000d31",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:43"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:43
~"\n\032\032frame-begin 0 0x555555554d31\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d31",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d31",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:43"}]}
~"\n\032\032frame-begin 0 0x555555554d66\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d66",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="42"}
~"\n\032\032frame-begin 0 0x555555554d66\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d66",func="??"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000d31",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:43"}]}
&"disassemble /s\n"
&"\n\032\032error-begin\n"
&"No function contains program counter for selected frame.\n"
~"\n\032\032error\n"
^error,msg="No function contains program counter for selected frame."
&"x/100i $pc\n"
~"=> 0x555555554d66:\tlea    -0x60(%rbp),%rax\n"
~"   0x555555554d6a:\tmov    %rax,%rdi\n"
~"   0x555555554d6d:\tcallq  0x555555554b00\n"
~"   0x555555554d72:\tmov    $0x0,%eax\n"
~"   0x555555554d77:\tmov    -0x18(%rbp),%rcx\n"
~"   0x555555554d7b:\txor    %fs:0x28,%rcx\n"
~"   0x555555554d84:\tje     0x555555554dd2\n"
~"   0x555555554d86:\tjmp    0x555555554dcd\n"
~"   0x555555554d88:\tmov    %rax,%rbx\n"
~"   0x555555554d8b:\tlea    -0x65(%rbp),%rax\n"
~"   0x555555554d8f:\tmov    %rax,%rdi\n"
~"   0x555555554d92:\tcallq  0x555555554b40\n"
~"   0x555555554d97:\tmov    %rbx,%rax\n"
~"   0x555555554d9a:\tmov    %rax,%rdi\n"
~"   0x555555554d9d:\tcallq  0x555555554ba0\n"
~"   0x555555554da2:\tmov    %rax,%rbx\n"
~"   0x555555554da5:\tlea    -0x40(%rbp),%rax\n"
~"   0x555555554da9:\tmov    %rax,%rdi\n"
~"   0x555555554dac:\tcallq  0x555555554b00\n"
~"   0x555555554db1:\tjmp    0x555555554db6\n"
~"   0x555555554db3:\tmov    %rax,%rbx\n"
~"   0x555555554db6:\tlea    -0x60(%rbp),%rax\n"
~"   0x555555554dba:\tmov    %rax,%rdi\n"
~"   0x555555554dbd:\tcallq  0x555555554b00\n"
~"   0x555555554dc2:\tmov    %rbx,%rax\n"
~"   0x555555554dc5:\tmov    %rax,%rdi\n"
~"   0x555555554dc8:\tcallq  0x555555554ba0\n"
~"   0x555555554dcd:\tcallq  0x555555554b50\n"
~"   0x555555554dd2:\tadd    $0x68,%rsp\n"
~"   0x555555554dd6:\tpop    %rbx\n"
~"   0x555555554dd7:\tpop    %rbp\n"
~"   0x555555554dd8:\tretq   \n"
~"   0x555555554dd9:\tpush   %rbp\n"
~"   0x555555554dda:\tmov    %rsp,%rbp\n"
~"   0x555555554ddd:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554de1:\tmov    %rsi,-0x10(%rbp)\n"
~"   0x555555554de5:\tmov    -0x10(%rbp),%rax\n"
~"   0x555555554de9:\tpop    %rbp\n"
~"   0x555555554dea:\tretq   \n"
~"   0x555555554deb:\tpush   %rbp\n"
~"   0x555555554dec:\tmov    %rsp,%rbp\n"
~"   0x555555554def:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554df3:\tcmpq   $0x1ff,-0x8(%rbp)\n"
~"   0x555555554dfb:\tja     0x555555554e0d\n"
~"   0x555555554dfd:\tmov    $0x200,%eax\n"
~"   0x555555554e02:\tmov    $0x0,%edx\n"
~"   0x555555554e07:\tdivq   -0x8(%rbp)\n"
~"   0x555555554e0b:\tjmp    0x555555554e12\n"
~"   0x555555554e0d:\tmov    $0x1,%eax\n"
~"   0x555555554e12:\tpop    %rbp\n"
~"   0x555555554e13:\tretq   \n"
~"   0x555555554e14:\tpush   %rbp\n"
~"   0x555555554e15:\tmov    %rsp,%rbp\n"
~"   0x555555554e18:\tsub    $0x10,%rsp\n"
~"   0x555555554e1c:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554e20:\tmov    -0x8(%rbp),%rax\n"
~"   0x555555554e24:\tmov    %rax,%rdi\n"
~"   0x555555554e27:\tcallq  0x555555554fee\n"
~"   0x555555554e2c:\tnop\n"
~"   0x555555554e2d:\tleaveq \n"
~"   0x555555554e2e:\tretq   \n"
~"   0x555555554e2f:\tnop\n"
~"   0x555555554e30:\tpush   %rbp\n"
~"   0x555555554e31:\tmov    %rsp,%rbp\n"
~"   0x555555554e34:\tpush   %rbx\n"
~"   0x555555554e35:\tsub    $0x98,%rsp\n"
~"   0x555555554e3c:\tmov    %rdi,-0x98(%rbp)\n"
~"   0x555555554e43:\tmov    %rsi,-0xa0(%rbp)\n"
~"   0x555555554e4a:\tmov    %fs:0x28,%rax\n"
~"   0x555555554e53:\tmov    %rax,-0x18(%rbp)\n"
~"   0x555555554e57:\txor    %eax,%eax\n"
~"   0x555555554e59:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554e5d:\tmov    %rax,%rdi\n"
~"   0x555555554e60:\tcallq  0x555555554fd2\n"
~"   0x555555554e65:\tmovl   $0xffffffff,-0x80(%rbp)\n"
~"   0x555555554e6c:\tlea    -0x80(%rbp),%rdx\n"
~"   0x555555554e70:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554e74:\tmov    %rdx,%rsi\n"
~"   0x555555554e77:\tmov    %rax,%rdi\n"
~"   0x555555554e7a:\tcallq  0x55555555508c\n"
~"   0x555555554e7f:\tmovl   $0x0,-0x84(%rbp)\n"
~"   0x555555554e89:\tmovq   $0x0,-0x78(%rbp)\n"
~"   0x555555554e91:\tmov    -0xa0(%rbp),%rax\n"
~"   0x555555554e98:\tmov    %rax,%rdi\n"
~"   0x555555554e9b:\tcallq  0x555555554b10\n"
~"   0x555555554ea0:\tcmp    %rax,-0x78(%rbp)\n"
~"   0x555555554ea4:\tsetb   %al\n"
~"   0x555555554ea7:\ttest   %al,%al\n"
~"   0x555555554ea9:\tje     0x555555554f84\n"
~"   0x555555554eaf:\tmov    -0x78(%rbp),%rdx\n"
~"   0x555555554eb3:\tmov    -0xa0(%rbp),%rax\n"
~"   0x555555554eba:\tmov    %rdx,%rsi\n"
~"   0x555555554ebd:\tmov    %rax,%rdi\n"
~"   0x555555554ec0:\tcallq  0x555555554bc0\n"
~"   0x555555554ec5:\tmovzbl (%rax),%eax\n"
~"   0x555555554ec8:\tmov    %al,-0x85(%rbp)\n"
~"   0x555555554ece:\tcmpb   $0x28,-0x85(%rbp)\n"
~"   0x555555554ed5:\tjne    0x555555554ef6\n"
~"   0x555555554ed7:\tmov    -0x78(%rbp),%rax\n"
~"   0x555555554edb:\tmov    %eax,-0x80(%rbp)\n"
^done
~"\n\032\032frame-begin 0 0x555555554d66\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d66",func="??"}

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="31",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:44
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
&"complete file a.ou\n"
~"file a.out\n"
^done
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="??"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
&"disassemble /s\n"
&"\n\032\032error-begin\n"
&"No function contains program counter for selected frame.\n"
~"\n\032\032error\n"
^error,msg="No function contains program counter for selected frame."
&"x/100i $pc\n"
~"=> 0x555555554d72:\tmov    $0x0,%eax\n"
~"   0x555555554d77:\tmov    -0x18(%rbp),%rcx\n"
~"   0x555555554d7b:\txor    %fs:0x28,%rcx\n"
~"   0x555555554d84:\tje     0x555555554dd2\n"
~"   0x555555554d86:\tjmp    0x555555554dcd\n"
~"   0x555555554d88:\tmov    %rax,%rbx\n"
~"   0x555555554d8b:\tlea    -0x65(%rbp),%rax\n"
~"   0x555555554d8f:\tmov    %rax,%rdi\n"
~"   0x555555554d92:\tcallq  0x555555554b40\n"
~"   0x555555554d97:\tmov    %rbx,%rax\n"
~"   0x555555554d9a:\tmov    %rax,%rdi\n"
~"   0x555555554d9d:\tcallq  0x555555554ba0\n"
~"   0x555555554da2:\tmov    %rax,%rbx\n"
~"   0x555555554da5:\tlea    -0x40(%rbp),%rax\n"
~"   0x555555554da9:\tmov    %rax,%rdi\n"
~"   0x555555554dac:\tcallq  0x555555554b00\n"
~"   0x555555554db1:\tjmp    0x555555554db6\n"
~"   0x555555554db3:\tmov    %rax,%rbx\n"
~"   0x555555554db6:\tlea    -0x60(%rbp),%rax\n"
~"   0x555555554dba:\tmov    %rax,%rdi\n"
~"   0x555555554dbd:\tcallq  0x555555554b00\n"
~"   0x555555554dc2:\tmov    %rbx,%rax\n"
~"   0x555555554dc5:\tmov    %rax,%rdi\n"
~"   0x555555554dc8:\tcallq  0x555555554ba0\n"
~"   0x555555554dcd:\tcallq  0x555555554b50\n"
~"   0x555555554dd2:\tadd    $0x68,%rsp\n"
~"   0x555555554dd6:\tpop    %rbx\n"
~"   0x555555554dd7:\tpop    %rbp\n"
~"   0x555555554dd8:\tretq   \n"
~"   0x555555554dd9:\tpush   %rbp\n"
~"   0x555555554dda:\tmov    %rsp,%rbp\n"
~"   0x555555554ddd:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554de1:\tmov    %rsi,-0x10(%rbp)\n"
~"   0x555555554de5:\tmov    -0x10(%rbp),%rax\n"
~"   0x555555554de9:\tpop    %rbp\n"
~"   0x555555554dea:\tretq   \n"
~"   0x555555554deb:\tpush   %rbp\n"
~"   0x555555554dec:\tmov    %rsp,%rbp\n"
~"   0x555555554def:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554df3:\tcmpq   $0x1ff,-0x8(%rbp)\n"
~"   0x555555554dfb:\tja     0x555555554e0d\n"
~"   0x555555554dfd:\tmov    $0x200,%eax\n"
~"   0x555555554e02:\tmov    $0x0,%edx\n"
~"   0x555555554e07:\tdivq   -0x8(%rbp)\n"
~"   0x555555554e0b:\tjmp    0x555555554e12\n"
~"   0x555555554e0d:\tmov    $0x1,%eax\n"
~"   0x555555554e12:\tpop    %rbp\n"
~"   0x555555554e13:\tretq   \n"
~"   0x555555554e14:\tpush   %rbp\n"
~"   0x555555554e15:\tmov    %rsp,%rbp\n"
~"   0x555555554e18:\tsub    $0x10,%rsp\n"
~"   0x555555554e1c:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554e20:\tmov    -0x8(%rbp),%rax\n"
~"   0x555555554e24:\tmov    %rax,%rdi\n"
~"   0x555555554e27:\tcallq  0x555555554fee\n"
~"   0x555555554e2c:\tnop\n"
~"   0x555555554e2d:\tleaveq \n"
~"   0x555555554e2e:\tretq   \n"
~"   0x555555554e2f:\tnop\n"
~"   0x555555554e30:\tpush   %rbp\n"
~"   0x555555554e31:\tmov    %rsp,%rbp\n"
~"   0x555555554e34:\tpush   %rbx\n"
~"   0x555555554e35:\tsub    $0x98,%rsp\n"
~"   0x555555554e3c:\tmov    %rdi,-0x98(%rbp)\n"
~"   0x555555554e43:\tmov    %rsi,-0xa0(%rbp)\n"
~"   0x555555554e4a:\tmov    %fs:0x28,%rax\n"
~"   0x555555554e53:\tmov    %rax,-0x18(%rbp)\n"
~"   0x555555554e57:\txor    %eax,%eax\n"
~"   0x555555554e59:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554e5d:\tmov    %rax,%rdi\n"
~"   0x555555554e60:\tcallq  0x555555554fd2\n"
~"   0x555555554e65:\tmovl   $0xffffffff,-0x80(%rbp)\n"
~"   0x555555554e6c:\tlea    -0x80(%rbp),%rdx\n"
~"   0x555555554e70:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554e74:\tmov    %rdx,%rsi\n"
~"   0x555555554e77:\tmov    %rax,%rdi\n"
~"   0x555555554e7a:\tcallq  0x55555555508c\n"
~"   0x555555554e7f:\tmovl   $0x0,-0x84(%rbp)\n"
~"   0x555555554e89:\tmovq   $0x0,-0x78(%rbp)\n"
~"   0x555555554e91:\tmov    -0xa0(%rbp),%rax\n"
~"   0x555555554e98:\tmov    %rax,%rdi\n"
~"   0x555555554e9b:\tcallq  0x555555554b10\n"
~"   0x555555554ea0:\tcmp    %rax,-0x78(%rbp)\n"
~"   0x555555554ea4:\tsetb   %al\n"
~"   0x555555554ea7:\ttest   %al,%al\n"
~"   0x555555554ea9:\tje     0x555555554f84\n"
~"   0x555555554eaf:\tmov    -0x78(%rbp),%rdx\n"
~"   0x555555554eb3:\tmov    -0xa0(%rbp),%rax\n"
~"   0x555555554eba:\tmov    %rdx,%rsi\n"
~"   0x555555554ebd:\tmov    %rax,%rdi\n"
~"   0x555555554ec0:\tcallq  0x555555554bc0\n"
~"   0x555555554ec5:\tmovzbl (%rax),%eax\n"
~"   0x555555554ec8:\tmov    %al,-0x85(%rbp)\n"
~"   0x555555554ece:\tcmpb   $0x28,-0x85(%rbp)\n"
~"   0x555555554ed5:\tjne    0x555555554ef6\n"
~"   0x555555554ed7:\tmov    -0x78(%rbp),%rax\n"
~"   0x555555554edb:\tmov    %eax,-0x80(%rbp)\n"
~"   0x555555554ede:\tlea    -0x80(%rbp),%rdx\n"
~"   0x555555554ee2:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554ee6:\tmov    %rdx,%rsi\n"
^done
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:44
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="??"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:44
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
__libc_start_main (main=0x555555554cea <main()>, argc=1, argv=0x7fffffffdbd8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdbc8) at ../csu/libc-start.c:344
~"\n\032\032frame-begin 0 0x7ffff7464b97\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00007ffff7464b97",func="__libc_start_main",file="../csu/libc-start.c",fullname="/build/glibc-2ORdQG/glibc-2.27/csu/../csu/libc-start.c",line="344"}
&"disassemble /s\n"
~"Dump of assembler code for function __libc_start_main:\n"
~"../csu/libc-start.c:\n"
~"137\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464ab0 <+0>:\tpush   %r13\n"
~"   0x00007ffff7464ab2 <+2>:\tpush   %r12\n"
~"   0x00007ffff7464ab4 <+4>:\txor    %eax,%eax\n"
~"   0x00007ffff7464ab6 <+6>:\tpush   %rbp\n"
~"   0x00007ffff7464ab7 <+7>:\tpush   %rbx\n"
~"   0x00007ffff7464ab8 <+8>:\tmov    %rcx,%rbp\n"
~"   0x00007ffff7464abb <+11>:\tsub    $0x98,%rsp\n"
~"   0x00007ffff7464ac2 <+18>:\tmov    %rdx,0x8(%rsp)\n"
~"\n"
~"138\tin ../csu/libc-start.c\n"
~"139\tin ../csu/libc-start.c\n"
~"140\tin ../csu/libc-start.c\n"
~"141\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464ac7 <+23>:\tmov    0x3c946a(%rip),%rdx        # 0x7ffff782df38\n"
~"\n"
~"137\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464ace <+30>:\tmov    %rdi,0x18(%rsp)\n"
~"   0x00007ffff7464ad3 <+35>:\tmov    %esi,0x14(%rsp)\n"
~"\n"
~"138\tin ../csu/libc-start.c\n"
~"139\tin ../csu/libc-start.c\n"
~"140\tin ../csu/libc-start.c\n"
~"141\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464ad7 <+39>:\ttest   %rdx,%rdx\n"
~"   0x00007ffff7464ada <+42>:\tje     0x7ffff7464ae5 <__libc_start_main+53>\n"
~"   0x00007ffff7464adc <+44>:\tmov    (%rdx),%edx\n"
~"   0x00007ffff7464ade <+46>:\txor    %eax,%eax\n"
~"   0x00007ffff7464ae0 <+48>:\ttest   %edx,%edx\n"
~"   0x00007ffff7464ae2 <+50>:\tsete   %al\n"
~"\n"
~"142\tin ../csu/libc-start.c\n"
~"143\tin ../csu/libc-start.c\n"
~"144\tin ../csu/libc-start.c\n"
~"145\tin ../csu/libc-start.c\n"
~"146\tin ../csu/libc-start.c\n"
~"147\tin ../csu/libc-start.c\n"
~"148\tin ../csu/libc-start.c\n"
~"149\tin ../csu/libc-start.c\n"
~"150\tin ../csu/libc-start.c\n"
~"151\tin ../csu/libc-start.c\n"
~"152\tin ../csu/libc-start.c\n"
~"153\tin ../csu/libc-start.c\n"
~"154\tin ../csu/libc-start.c\n"
~"155\tin ../csu/libc-start.c\n"
~"156\tin ../csu/libc-start.c\n"
~"157\tin ../csu/libc-start.c\n"
~"158\tin ../csu/libc-start.c\n"
~"159\tin ../csu/libc-start.c\n"
~"160\tin ../csu/libc-start.c\n"
~"161\tin ../csu/libc-start.c\n"
~"162\tin ../csu/libc-start.c\n"
~"163\tin ../csu/libc-start.c\n"
~"164\tin ../csu/libc-start.c\n"
~"165\tin ../csu/libc-start.c\n"
~"166\tin ../csu/libc-start.c\n"
~"167\tin ../csu/libc-start.c\n"
~"168\tin ../csu/libc-start.c\n"
~"169\tin ../csu/libc-start.c\n"
~"170\tin ../csu/libc-start.c\n"
~"171\tin ../csu/libc-start.c\n"
~"172\tin ../csu/libc-start.c\n"
~"173\tin ../csu/libc-start.c\n"
~"174\tin ../csu/libc-start.c\n"
~"175\tin ../csu/libc-start.c\n"
~"176\tin ../csu/libc-start.c\n"
~"177\tin ../csu/libc-start.c\n"
~"178\tin ../csu/libc-start.c\n"
~"179\tin ../csu/libc-start.c\n"
~"180\tin ../csu/libc-start.c\n"
~"181\tin ../csu/libc-start.c\n"
~"182\tin ../csu/libc-start.c\n"
~"183\tin ../csu/libc-start.c\n"
~"184\tin ../csu/libc-start.c\n"
~"185\tin ../csu/libc-start.c\n"
~"186\tin ../csu/libc-start.c\n"
~"187\tin ../csu/libc-start.c\n"
~"188\tin ../csu/libc-start.c\n"
~"189\tin ../csu/libc-start.c\n"
~"190\tin ../csu/libc-start.c\n"
~"191\tin ../csu/libc-start.c\n"
~"192\tin ../csu/libc-start.c\n"
~"193\tin ../csu/libc-start.c\n"
~"194\tin ../csu/libc-start.c\n"
~"195\tin ../csu/libc-start.c\n"
~"196\tin ../csu/libc-start.c\n"
~"197\tin ../csu/libc-start.c\n"
~"198\tin ../csu/libc-start.c\n"
~"199\tin ../csu/libc-start.c\n"
~"200\tin ../csu/libc-start.c\n"
~"201\tin ../csu/libc-start.c\n"
~"202\tin ../csu/libc-start.c\n"
~"203\tin ../csu/libc-start.c\n"
~"204\tin ../csu/libc-start.c\n"
~"205\tin ../csu/libc-start.c\n"
~"206\tin ../csu/libc-start.c\n"
~"207\tin ../csu/libc-start.c\n"
~"208\tin ../csu/libc-start.c\n"
~"209\tin ../csu/libc-start.c\n"
~"210\tin ../csu/libc-start.c\n"
~"211\tin ../csu/libc-start.c\n"
~"212\tin ../csu/libc-start.c\n"
~"213\tin ../csu/libc-start.c\n"
~"214\tin ../csu/libc-start.c\n"
~"215\tin ../csu/libc-start.c\n"
~"216\tin ../csu/libc-start.c\n"
~"217\tin ../csu/libc-start.c\n"
~"218\tin ../csu/libc-start.c\n"
~"219\tin ../csu/libc-start.c\n"
~"220\tin ../csu/libc-start.c\n"
~"221\tin ../csu/libc-start.c\n"
~"222\tin ../csu/libc-start.c\n"
~"223\tin ../csu/libc-start.c\n"
~"224\tin ../csu/libc-start.c\n"
~"225\tin ../csu/libc-start.c\n"
~"226\tin ../csu/libc-start.c\n"
~"227\tin ../csu/libc-start.c\n"
~"228\tin ../csu/libc-start.c\n"
~"229\tin ../csu/libc-start.c\n"
~"230\tin ../csu/libc-start.c\n"
~"231\tin ../csu/libc-start.c\n"
~"232\tin ../csu/libc-start.c\n"
~"233\tin ../csu/libc-start.c\n"
~"234\tin ../csu/libc-start.c\n"
~"235\tin ../csu/libc-start.c\n"
~"236\tin ../csu/libc-start.c\n"
~"237\tin ../csu/libc-start.c\n"
~"238\tin ../csu/libc-start.c\n"
~"239\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464ae5 <+53>:\ttest   %r9,%r9\n"
~"\n"
~"141\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464ae8 <+56>:\tmov    %eax,0x3c96b2(%rip)        # 0x7ffff782e1a0 <__libc_multiple_libcs>\n"
~"\n"
~"142\tin ../csu/libc-start.c\n"
~"143\tin ../csu/libc-start.c\n"
~"144\tin ../csu/libc-start.c\n"
~"145\tin ../csu/libc-start.c\n"
~"146\tin ../csu/libc-start.c\n"
~"147\tin ../csu/libc-start.c\n"
~"148\tin ../csu/libc-start.c\n"
~"149\tin ../csu/libc-start.c\n"
~"150\tin ../csu/libc-start.c\n"
~"151\tin ../csu/libc-start.c\n"
~"152\tin ../csu/libc-start.c\n"
~"153\tin ../csu/libc-start.c\n"
~"154\tin ../csu/libc-start.c\n"
~"155\tin ../csu/libc-start.c\n"
~"156\tin ../csu/libc-start.c\n"
~"157\tin ../csu/libc-start.c\n"
~"158\tin ../csu/libc-start.c\n"
~"159\tin ../csu/libc-start.c\n"
~"160\tin ../csu/libc-start.c\n"
~"161\tin ../csu/libc-start.c\n"
~"162\tin ../csu/libc-start.c\n"
~"163\tin ../csu/libc-start.c\n"
~"164\tin ../csu/libc-start.c\n"
~"165\tin ../csu/libc-start.c\n"
~"166\tin ../csu/libc-start.c\n"
~"167\tin ../csu/libc-start.c\n"
~"168\tin ../csu/libc-start.c\n"
~"169\tin ../csu/libc-start.c\n"
~"170\tin ../csu/libc-start.c\n"
~"171\tin ../csu/libc-start.c\n"
~"172\tin ../csu/libc-start.c\n"
~"173\tin ../csu/libc-start.c\n"
~"174\tin ../csu/libc-start.c\n"
~"175\tin ../csu/libc-start.c\n"
~"176\tin ../csu/libc-start.c\n"
~"177\tin ../csu/libc-start.c\n"
~"178\tin ../csu/libc-start.c\n"
~"179\tin ../csu/libc-start.c\n"
~"180\tin ../csu/libc-start.c\n"
~"181\tin ../csu/libc-start.c\n"
~"182\tin ../csu/libc-start.c\n"
~"183\tin ../csu/libc-start.c\n"
~"184\tin ../csu/libc-start.c\n"
~"185\tin ../csu/libc-start.c\n"
~"186\tin ../csu/libc-start.c\n"
~"187\tin ../csu/libc-start.c\n"
~"188\tin ../csu/libc-start.c\n"
~"189\tin ../csu/libc-start.c\n"
~"190\tin ../csu/libc-start.c\n"
~"191\tin ../csu/libc-start.c\n"
~"192\tin ../csu/libc-start.c\n"
~"193\tin ../csu/libc-start.c\n"
~"194\tin ../csu/libc-start.c\n"
~"195\tin ../csu/libc-start.c\n"
~"196\tin ../csu/libc-start.c\n"
~"197\tin ../csu/libc-start.c\n"
~"198\tin ../csu/libc-start.c\n"
~"199\tin ../csu/libc-start.c\n"
~"200\tin ../csu/libc-start.c\n"
~"201\tin ../csu/libc-start.c\n"
~"202\tin ../csu/libc-start.c\n"
~"203\tin ../csu/libc-start.c\n"
~"204\tin ../csu/libc-start.c\n"
~"205\tin ../csu/libc-start.c\n"
~"206\tin ../csu/libc-start.c\n"
~"207\tin ../csu/libc-start.c\n"
~"208\tin ../csu/libc-start.c\n"
~"209\tin ../csu/libc-start.c\n"
~"210\tin ../csu/libc-start.c\n"
~"211\tin ../csu/libc-start.c\n"
~"212\tin ../csu/libc-start.c\n"
~"213\tin ../csu/libc-start.c\n"
~"214\tin ../csu/libc-start.c\n"
~"215\tin ../csu/libc-start.c\n"
~"216\tin ../csu/libc-start.c\n"
~"217\tin ../csu/libc-start.c\n"
~"218\tin ../csu/libc-start.c\n"
~"219\tin ../csu/libc-start.c\n"
~"220\tin ../csu/libc-start.c\n"
~"221\tin ../csu/libc-start.c\n"
~"222\tin ../csu/libc-start.c\n"
~"223\tin ../csu/libc-start.c\n"
~"224\tin ../csu/libc-start.c\n"
~"225\tin ../csu/libc-start.c\n"
~"226\tin ../csu/libc-start.c\n"
~"227\tin ../csu/libc-start.c\n"
~"228\tin ../csu/libc-start.c\n"
~"229\tin ../csu/libc-start.c\n"
~"230\tin ../csu/libc-start.c\n"
~"231\tin ../csu/libc-start.c\n"
~"232\tin ../csu/libc-start.c\n"
~"233\tin ../csu/libc-start.c\n"
~"234\tin ../csu/libc-start.c\n"
~"235\tin ../csu/libc-start.c\n"
~"236\tin ../csu/libc-start.c\n"
~"237\tin ../csu/libc-start.c\n"
~"238\tin ../csu/libc-start.c\n"
~"239\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464aee <+62>:\tje     0x7ffff7464afc <__libc_start_main+76>\n"
~"\n"
~"240\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464af0 <+64>:\txor    %edx,%edx\n"
~"   0x00007ffff7464af2 <+66>:\txor    %esi,%esi\n"
~"   0x00007ffff7464af4 <+68>:\tmov    %r9,%rdi\n"
~"   0x00007ffff7464af7 <+71>:\tcallq  0x7ffff74864e0 <__GI___cxa_atexit>\n"
~"\n"
~"241\tin ../csu/libc-start.c\n"
~"242\tin ../csu/libc-start.c\n"
~"243\tin ../csu/libc-start.c\n"
~"244\tin ../csu/libc-start.c\n"
~"245\tin ../csu/libc-start.c\n"
~"246\tin ../csu/libc-start.c\n"
~"247\tin ../csu/libc-start.c\n"
~"248\tin ../csu/libc-start.c\n"
~"249\tin ../csu/libc-start.c\n"
~"250\tin ../csu/libc-start.c\n"
~"251\tin ../csu/libc-start.c\n"
~"252\tin ../csu/libc-start.c\n"
~"253\tin ../csu/libc-start.c\n"
~"254\tin ../csu/libc-start.c\n"
~"255\tin ../csu/libc-start.c\n"
~"256\tin ../csu/libc-start.c\n"
~"257\tin ../csu/libc-start.c\n"
~"258\tin ../csu/libc-start.c\n"
~"259\tin ../csu/libc-start.c\n"
~"260\tin ../csu/libc-start.c\n"
~"261\tin ../csu/libc-start.c\n"
~"262\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464afc <+76>:\tmov    0x3c9355(%rip),%rdx        # 0x7ffff782de58\n"
~"   0x00007ffff7464b03 <+83>:\tmov    (%rdx),%ebx\n"
~"   0x00007ffff7464b05 <+85>:\tand    $0x2,%ebx\n"
~"   0x00007ffff7464b08 <+88>:\tjne    0x7ffff7464be8 <__libc_start_main+312>\n"
~"\n"
~"264\tin ../csu/libc-start.c\n"
~"265\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b0e <+94>:\ttest   %rbp,%rbp\n"
~"   0x00007ffff7464b11 <+97>:\tje     0x7ffff7464b28 <__libc_start_main+120>\n"
~"\n"
~"266\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b13 <+99>:\tmov    0x3c938e(%rip),%rax        # 0x7ffff782dea8\n"
~"   0x00007ffff7464b1a <+106>:\tmov    0x8(%rsp),%rsi\n"
~"   0x00007ffff7464b1f <+111>:\tmov    0x14(%rsp),%edi\n"
~"   0x00007ffff7464b23 <+115>:\tmov    (%rax),%rdx\n"
~"   0x00007ffff7464b26 <+118>:\tcallq  *%rbp\n"
~"\n"
~"267\tin ../csu/libc-start.c\n"
~"268\tin ../csu/libc-start.c\n"
~"269\tin ../csu/libc-start.c\n"
~"270\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b28 <+120>:\tmov    0x3c9329(%rip),%rdx        # 0x7ffff782de58\n"
~"   0x00007ffff7464b2f <+127>:\tmov    0x1b0(%rdx),%eax\n"
~"   0x00007ffff7464b35 <+133>:\ttest   %eax,%eax\n"
~"   0x00007ffff7464b37 <+135>:\tjne    0x7ffff7464c08 <__libc_start_main+344>\n"
~"\n"
~"280\tin ../csu/libc-start.c\n"
~"281\tin ../csu/libc-start.c\n"
~"282\tin ../csu/libc-start.c\n"
~"283\tin ../csu/libc-start.c\n"
~"284\tin ../csu/libc-start.c\n"
~"285\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b3d <+141>:\ttest   %ebx,%ebx\n"
~"   0x00007ffff7464b3f <+143>:\tjne    0x7ffff7464c4b <__libc_start_main+411>\n"
~"\n"
~"287\tin ../csu/libc-start.c\n"
~"288\tin ../csu/libc-start.c\n"
~"289\tin ../csu/libc-start.c\n"
~"290\tin ../csu/libc-start.c\n"
~"291\tin ../csu/libc-start.c\n"
~"292\tin ../csu/libc-start.c\n"
~"293\tin ../csu/libc-start.c\n"
~"294\tin ../csu/libc-start.c\n"
~"295\tin ../csu/libc-start.c\n"
~"296\tin ../csu/libc-start.c\n"
~"297\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b45 <+149>:\tlea    0x20(%rsp),%rdi\n"
~"   0x00007ffff7464b4a <+154>:\tcallq  0x7ffff7481cc0 <_setjmp>\n"
~"\n"
~"298\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b4f <+159>:\ttest   %eax,%eax\n"
~"   0x00007ffff7464b51 <+161>:\tjne    0x7ffff7464b9e <__libc_start_main+238>\n"
~"\n"
~"299\tin ../csu/libc-start.c\n"
~"300\tin ../csu/libc-start.c\n"
~"301\tin ../csu/libc-start.c\n"
~"302\tin ../csu/libc-start.c\n"
~"303\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b53 <+163>:\tmov    %fs:0x300,%rax\n"
~"   0x00007ffff7464b5c <+172>:\tmov    %rax,0x68(%rsp)\n"
~"\n"
~"304\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b61 <+177>:\tmov    %fs:0x2f8,%rax\n"
~"   0x00007ffff7464b6a <+186>:\tmov    %rax,0x70(%rsp)\n"
~"\n"
~"305\tin ../csu/libc-start.c\n"
~"306\tin ../csu/libc-start.c\n"
~"307\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b6f <+191>:\tlea    0x20(%rsp),%rax\n"
~"   0x00007ffff7464b74 <+196>:\tmov    %rax,%fs:0x300\n"
~"\n"
~"308\tin ../csu/libc-start.c\n"
~"309\tin ../csu/libc-start.c\n"
~"310\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b7d <+205>:\tmov    0x3c9324(%rip),%rax        # 0x7ffff782dea8\n"
~"   0x00007ffff7464b84 <+212>:\tmov    0x8(%rsp),%rsi\n"
~"   0x00007ffff7464b89 <+217>:\tmov    0x14(%rsp),%edi\n"
~"   0x00007ffff7464b8d <+221>:\tmov    (%rax),%rdx\n"
~"   0x00007ffff7464b90 <+224>:\tmov    0x18(%rsp),%rax\n"
~"   0x00007ffff7464b95 <+229>:\tcallq  *%rax\n"
~"\n"
~"336\tin ../csu/libc-start.c\n"
~"337\tin ../csu/libc-start.c\n"
~"338\tin ../csu/libc-start.c\n"
~"339\tin ../csu/libc-start.c\n"
~"340\tin ../csu/libc-start.c\n"
~"341\tin ../csu/libc-start.c\n"
~"342\tin ../csu/libc-start.c\n"
~"343\tin ../csu/libc-start.c\n"
~"344\tin ../csu/libc-start.c\n"
~"=> 0x00007ffff7464b97 <+231>:\tmov    %eax,%edi\n"
~"   0x00007ffff7464b99 <+233>:\tcallq  0x7ffff74861d0 <__GI_exit>\n"
~"\n"
~"316\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464b9e <+238>:\tmov    0x3ced23(%rip),%rax        # 0x7ffff78338c8 <__libc_pthread_functions+392>\n"
~"   0x00007ffff7464ba5 <+245>:\tror    $0x11,%rax\n"
~"   0x00007ffff7464ba9 <+249>:\txor    %fs:0x30,%rax\n"
~"   0x00007ffff7464bb2 <+258>:\tcallq  *%rax\n"
~"\n"
~"325\tin ../csu/libc-start.c\n"
~"326\tin ../csu/libc-start.c\n"
~"327\tin ../csu/libc-start.c\n"
~"328\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464bb4 <+260>:\tmov    0x3cecfd(%rip),%rax        # 0x7ffff78338b8 <__libc_pthread_functions+376>\n"
~"   0x00007ffff7464bbb <+267>:\tror    $0x11,%rax\n"
~"   0x00007ffff7464bbf <+271>:\txor    %fs:0x30,%rax\n"
~"\n"
~"329\tin ../csu/libc-start.c\n"
~"330\tin ../csu/libc-start.c\n"
~"331\tin ../csu/libc-start.c\n"
~"332\tin ../csu/libc-start.c\n"
~"333\tin ../csu/libc-start.c\n"
~"334\tin ../csu/libc-start.c\n"
~"335\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464bc8 <+280>:\tlock decl (%rax)\n"
~"   0x00007ffff7464bcb <+283>:\tsete   %dl\n"
~"   0x00007ffff7464bce <+286>:\ttest   %dl,%dl\n"
~"   0x00007ffff7464bd0 <+288>:\tjne    0x7ffff7464c04 <__libc_start_main+340>\n"
~"\n"
~"../sysdeps/unix/sysv/linux/exit-thread.h:\n"
&"36\t../sysdeps/unix/sysv/linux/exit-thread.h: No such file or directory.\n"
~"   0x00007ffff7464bd2 <+290>:\tmov    $0x3c,%edx\n"
~"   0x00007ffff7464bd7 <+295>:\tnopw   0x0(%rax,%rax,1)\n"
~"   0x00007ffff7464be0 <+304>:\txor    %edi,%edi\n"
~"   0x00007ffff7464be2 <+306>:\tmov    %edx,%eax\n"
~"   0x00007ffff7464be4 <+308>:\tsyscall \n"
~"   0x00007ffff7464be6 <+310>:\tjmp    0x7ffff7464be0 <__libc_start_main+304>\n"
~"\n"
~"../csu/libc-start.c:\n"
&"263\t../csu/libc-start.c: No such file or directory.\n"
~"   0x00007ffff7464be8 <+312>:\tmov    0x8(%rsp),%rax\n"
~"   0x00007ffff7464bed <+317>:\tlea    0x191e01(%rip),%rdi        # 0x7ffff75f69f5\n"
~"   0x00007ffff7464bf4 <+324>:\tmov    (%rax),%rsi\n"
~"   0x00007ffff7464bf7 <+327>:\txor    %eax,%eax\n"
~"   0x00007ffff7464bf9 <+329>:\tcallq  *0x168(%rdx)\n"
~"   0x00007ffff7464bff <+335>:\tjmpq   0x7ffff7464b0e <__libc_start_main+94>\n"
~"\n"
~"317\tin ../csu/libc-start.c\n"
~"318\tin ../csu/libc-start.c\n"
~"319\tin ../csu/libc-start.c\n"
~"320\tin ../csu/libc-start.c\n"
~"321\tin ../csu/libc-start.c\n"
~"322\tin ../csu/libc-start.c\n"
~"323\tin ../csu/libc-start.c\n"
~"324\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464c04 <+340>:\txor    %eax,%eax\n"
~"   0x00007ffff7464c06 <+342>:\tjmp    0x7ffff7464b97 <__libc_start_main+231>\n"
~"\n"
~"272\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464c08 <+344>:\tmov    0x1a8(%rdx),%r13\n"
~"\n"
~"273\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464c0f <+351>:\tmov    0x3c91d2(%rip),%rdx        # 0x7ffff782dde8\n"
~"   0x00007ffff7464c16 <+358>:\tmov    %eax,%ebp\n"
~"   0x00007ffff7464c18 <+360>:\tshl    $0x4,%rbp\n"
~"   0x00007ffff7464c1c <+364>:\tmov    (%rdx),%r12\n"
~"   0x00007ffff7464c1f <+367>:\tadd    $0x470,%r12\n"
~"   0x00007ffff7464c26 <+374>:\tadd    %r12,%rbp\n"
~"\n"
~"274\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464c29 <+377>:\tjmp    0x7ffff7464c41 <__libc_start_main+401>\n"
~"\n"
~"275\tin ../csu/libc-start.c\n"
~"276\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464c2b <+379>:\tmov    0x18(%r13),%rax\n"
~"   0x00007ffff7464c2f <+383>:\ttest   %rax,%rax\n"
~"   0x00007ffff7464c32 <+386>:\tje     0x7ffff7464c39 <__libc_start_main+393>\n"
~"\n"
~"277\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464c34 <+388>:\tmov    %r12,%rdi\n"
~"   0x00007ffff7464c37 <+391>:\tcallq  *%rax\n"
~"\n"
~"278\tin ../csu/libc-start.c\n"
~"279\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464c39 <+393>:\tmov    0x40(%r13),%r13\n"
~"   0x00007ffff7464c3d <+397>:\tadd    $0x10,%r12\n"
~"\n"
~"274\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464c41 <+401>:\tcmp    %rbp,%r12\n"
~"   0x00007ffff7464c44 <+404>:\tjne    0x7ffff7464c2b <__libc_start_main+379>\n"
~"   0x00007ffff7464c46 <+406>:\tjmpq   0x7ffff7464b3d <__libc_start_main+141>\n"
~"\n"
~"286\tin ../csu/libc-start.c\n"
~"   0x00007ffff7464c4b <+411>:\tmov    0x8(%rsp),%rax\n"
~"   0x00007ffff7464c50 <+416>:\tmov    0x3c9201(%rip),%rdx        # 0x7ffff782de58\n"
~"   0x00007ffff7464c57 <+423>:\tlea    0x191db1(%rip),%rdi        # 0x7ffff75f6a0f\n"
~"   0x00007ffff7464c5e <+430>:\tmov    (%rax),%rsi\n"
~"   0x00007ffff7464c61 <+433>:\txor    %eax,%eax\n"
~"   0x00007ffff7464c63 <+435>:\tcallq  *0x168(%rdx)\n"
~"   0x00007ffff7464c69 <+441>:\tjmpq   0x7ffff7464b45 <__libc_start_main+149>\n"
~"End of assembler dump.\n"
^done
[Inferior 1 (process 20555) exited normally]
^error,msg="No registers."
^done,line="286",file="../csu/libc-start.c",fullname="/build/glibc-2ORdQG/glibc-2.27/csu/../csu/libc-start.c",macro-info="0"
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:44
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:44
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="31",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:44
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="??"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000d72",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="44",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:44"}]}
&"disassemble /s\n"
&"\n\032\032error-begin\n"
&"No function contains program counter for selected frame.\n"
~"\n\032\032error\n"
^error,msg="No function contains program counter for selected frame."
&"x/100i $pc\n"
~"=> 0x555555554d72:\tmov    $0x0,%eax\n"
~"   0x555555554d77:\tmov    -0x18(%rbp),%rcx\n"
~"   0x555555554d7b:\txor    %fs:0x28,%rcx\n"
~"   0x555555554d84:\tje     0x555555554dd2\n"
~"   0x555555554d86:\tjmp    0x555555554dcd\n"
~"   0x555555554d88:\tmov    %rax,%rbx\n"
~"   0x555555554d8b:\tlea    -0x65(%rbp),%rax\n"
~"   0x555555554d8f:\tmov    %rax,%rdi\n"
~"   0x555555554d92:\tcallq  0x555555554b40\n"
~"   0x555555554d97:\tmov    %rbx,%rax\n"
~"   0x555555554d9a:\tmov    %rax,%rdi\n"
~"   0x555555554d9d:\tcallq  0x555555554ba0\n"
~"   0x555555554da2:\tmov    %rax,%rbx\n"
~"   0x555555554da5:\tlea    -0x40(%rbp),%rax\n"
~"   0x555555554da9:\tmov    %rax,%rdi\n"
~"   0x555555554dac:\tcallq  0x555555554b00\n"
~"   0x555555554db1:\tjmp    0x555555554db6\n"
~"   0x555555554db3:\tmov    %rax,%rbx\n"
~"   0x555555554db6:\tlea    -0x60(%rbp),%rax\n"
~"   0x555555554dba:\tmov    %rax,%rdi\n"
~"   0x555555554dbd:\tcallq  0x555555554b00\n"
~"   0x555555554dc2:\tmov    %rbx,%rax\n"
~"   0x555555554dc5:\tmov    %rax,%rdi\n"
~"   0x555555554dc8:\tcallq  0x555555554ba0\n"
~"   0x555555554dcd:\tcallq  0x555555554b50\n"
~"   0x555555554dd2:\tadd    $0x68,%rsp\n"
~"   0x555555554dd6:\tpop    %rbx\n"
~"   0x555555554dd7:\tpop    %rbp\n"
~"   0x555555554dd8:\tretq   \n"
~"   0x555555554dd9:\tpush   %rbp\n"
~"   0x555555554dda:\tmov    %rsp,%rbp\n"
~"   0x555555554ddd:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554de1:\tmov    %rsi,-0x10(%rbp)\n"
~"   0x555555554de5:\tmov    -0x10(%rbp),%rax\n"
~"   0x555555554de9:\tpop    %rbp\n"
~"   0x555555554dea:\tretq   \n"
~"   0x555555554deb:\tpush   %rbp\n"
~"   0x555555554dec:\tmov    %rsp,%rbp\n"
~"   0x555555554def:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554df3:\tcmpq   $0x1ff,-0x8(%rbp)\n"
~"   0x555555554dfb:\tja     0x555555554e0d\n"
~"   0x555555554dfd:\tmov    $0x200,%eax\n"
~"   0x555555554e02:\tmov    $0x0,%edx\n"
~"   0x555555554e07:\tdivq   -0x8(%rbp)\n"
~"   0x555555554e0b:\tjmp    0x555555554e12\n"
~"   0x555555554e0d:\tmov    $0x1,%eax\n"
~"   0x555555554e12:\tpop    %rbp\n"
~"   0x555555554e13:\tretq   \n"
~"   0x555555554e14:\tpush   %rbp\n"
~"   0x555555554e15:\tmov    %rsp,%rbp\n"
~"   0x555555554e18:\tsub    $0x10,%rsp\n"
~"   0x555555554e1c:\tmov    %rdi,-0x8(%rbp)\n"
~"   0x555555554e20:\tmov    -0x8(%rbp),%rax\n"
~"   0x555555554e24:\tmov    %rax,%rdi\n"
~"   0x555555554e27:\tcallq  0x555555554fee\n"
~"   0x555555554e2c:\tnop\n"
~"   0x555555554e2d:\tleaveq \n"
~"   0x555555554e2e:\tretq   \n"
~"   0x555555554e2f:\tnop\n"
~"   0x555555554e30:\tpush   %rbp\n"
~"   0x555555554e31:\tmov    %rsp,%rbp\n"
~"   0x555555554e34:\tpush   %rbx\n"
~"   0x555555554e35:\tsub    $0x98,%rsp\n"
~"   0x555555554e3c:\tmov    %rdi,-0x98(%rbp)\n"
~"   0x555555554e43:\tmov    %rsi,-0xa0(%rbp)\n"
~"   0x555555554e4a:\tmov    %fs:0x28,%rax\n"
~"   0x555555554e53:\tmov    %rax,-0x18(%rbp)\n"
~"   0x555555554e57:\txor    %eax,%eax\n"
~"   0x555555554e59:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554e5d:\tmov    %rax,%rdi\n"
~"   0x555555554e60:\tcallq  0x555555554fd2\n"
~"   0x555555554e65:\tmovl   $0xffffffff,-0x80(%rbp)\n"
~"   0x555555554e6c:\tlea    -0x80(%rbp),%rdx\n"
~"   0x555555554e70:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554e74:\tmov    %rdx,%rsi\n"
~"   0x555555554e77:\tmov    %rax,%rdi\n"
~"   0x555555554e7a:\tcallq  0x55555555508c\n"
~"   0x555555554e7f:\tmovl   $0x0,-0x84(%rbp)\n"
~"   0x555555554e89:\tmovq   $0x0,-0x78(%rbp)\n"
~"   0x555555554e91:\tmov    -0xa0(%rbp),%rax\n"
~"   0x555555554e98:\tmov    %rax,%rdi\n"
~"   0x555555554e9b:\tcallq  0x555555554b10\n"
~"   0x555555554ea0:\tcmp    %rax,-0x78(%rbp)\n"
~"   0x555555554ea4:\tsetb   %al\n"
~"   0x555555554ea7:\ttest   %al,%al\n"
~"   0x555555554ea9:\tje     0x555555554f84\n"
~"   0x555555554eaf:\tmov    -0x78(%rbp),%rdx\n"
~"   0x555555554eb3:\tmov    -0xa0(%rbp),%rax\n"
~"   0x555555554eba:\tmov    %rdx,%rsi\n"
~"   0x555555554ebd:\tmov    %rax,%rdi\n"
~"   0x555555554ec0:\tcallq  0x555555554bc0\n"
~"   0x555555554ec5:\tmovzbl (%rax),%eax\n"
~"   0x555555554ec8:\tmov    %al,-0x85(%rbp)\n"
~"   0x555555554ece:\tcmpb   $0x28,-0x85(%rbp)\n"
~"   0x555555554ed5:\tjne    0x555555554ef6\n"
~"   0x555555554ed7:\tmov    -0x78(%rbp),%rax\n"
~"   0x555555554edb:\tmov    %eax,-0x80(%rbp)\n"
~"   0x555555554ede:\tlea    -0x80(%rbp),%rdx\n"
~"   0x555555554ee2:\tlea    -0x70(%rbp),%rax\n"
~"   0x555555554ee6:\tmov    %rdx,%rsi\n"
^done
~"\n\032\032frame-begin 0 0x555555554d72\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d72",func="??"}

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="31",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000d31",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:43"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:43
~"\n\032\032frame-begin 0 0x555555554d31\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d31",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d31",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:43"}]}
~"\n\032\032frame-begin 0 0x555555554d66\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d66",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="42"}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:43
~"\n\032\032frame-begin 0 0x555555554d31\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d31",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d31",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:43"}]}
~"\n\032\032frame-begin 0 0x555555554d66\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d66",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="42"}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:43
~"\n\032\032frame-begin 0 0x555555554d31\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d31",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d31",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:43"}]}
Solution::longestValidParentheses (this=0x7fffffffda8b, s=")asdfsa)()))(asdfsafsaf)))))))))") at solution.cpp:10
~"\n\032\032frame-begin 0 0x555555554e4a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e4a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="10"}
~"\n\032\032frame-begin 0 0x555555554e59\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e59",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="12"}
~"\n\032\032frame-begin 0 0x555555554e65\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e65",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="13"}
~"\n\032\032frame-begin 0 0x555555554e7f\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e7f",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="14"}
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f54\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f54",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="32"}
&"complete pst\n"
~"pstack\n"
~"pstring\n"
^done
&"complete psta\n"
~"pstack\n"
^done
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
&"complete \n"
~"!\n"
~"+\n"
~"-\n"
~"<\n"
~">\n"
~"actions\n"
~"add-auto-load-safe-path\n"
~"add-auto-load-scripts-directory\n"
~"add-inferior\n"
~"add-symbol-file\n"
~"add-symbol-file-from-memory\n"
~"advance\n"
~"agent-printf\n"
~"alias\n"
~"append\n"
~"apropos\n"
~"attach\n"
~"awatch\n"
~"backtrace\n"
~"bookmark\n"
~"break\n"
~"break-range\n"
~"bt\n"
~"call\n"
~"catch\n"
~"cd\n"
~"checkpoint\n"
~"clear\n"
~"clone-inferior\n"
~"collect\n"
~"commands\n"
~"compare-sections\n"
~"compile\n"
~"complete\n"
~"condition\n"
~"continue\n"
~"core-file\n"
~"define\n"
~"delete\n"
~"demangle\n"
~"detach\n"
~"directory\n"
~"disable\n"
~"disassemble\n"
~"disconnect\n"
~"display\n"
~"document\n"
~"dont-repeat\n"
~"down\n"
~"down-silently\n"
~"downbp\n"
~"dprintf\n"
~"dump\n"
~"echo\n"
~"edit\n"
~"enable\n"
~"end\n"
~"eval\n"
~"exec-file\n"
~"explore\n"
~"expression\n"
~"file\n"
~"find\n"
~"finish\n"
~"flash-erase\n"
~"flushregs\n"
~"focus\n"
~"forward-search\n"
~"frame\n"
~"fs\n"
~"ftrace\n"
~"function\n"
~"generate-core-file\n"
~"goto-bookmark\n"
~"guile\n"
~"guile-repl\n"
~"handle\n"
~"hbreak\n"
~"help\n"
~"if\n"
~"ignore\n"
~"inferior\n"
~"info\n"
~"init-if-undefined\n"
~"interpreter-exec\n"
~"interrupt\n"
~"jit-reader-load\n"
~"jit-reader-unload\n"
~"jump\n"
~"kill\n"
~"layout\n"
~"list\n"
~"load\n"
~"loadbp\n"
~"macro\n"
~"maintenance\n"
~"make\n"
~"mem\n"
~"monitor\n"
~"myloop_print\n"
~"new-ui\n"
~"next\n"
~"nexti\n"
~"ni\n"
~"nosharedlibrary\n"
~"output\n"
~"overlay\n"
~"passcount\n"
~"path\n"
~"pbitset\n"
~"pdequeue\n"
~"plist\n"
~"plist_member\n"
~"plistnode\n"
~"pmap\n"
~"pmap_member\n"
~"ppqueue\n"
~"pqueue\n"
~"print\n"
~"print-object\n"
~"printf\n"
~"pset\n"
~"pstack\n"
~"pstring\n"
~"ptype\n"
~"pvector\n"
~"pwd\n"
~"pwstring\n"
~"python\n"
~"python-interactive\n"
~"qbp\n"
~"queue-signal\n"
~"quit\n"
~"rbreak\n"
~"rc\n"
~"record\n"
~"refresh\n"
~"remote\n"
~"remove-inferiors\n"
~"remove-symbol-file\n"
~"restart\n"
~"restore\n"
~"return\n"
~"reverse-continue\n"
~"reverse-finish\n"
~"reverse-next\n"
~"reverse-nexti\n"
~"reverse-search\n"
~"reverse-step\n"
~"reverse-stepi\n"
~"rni\n"
~"rsi\n"
~"run\n"
~"rwatch\n"
~"save\n"
~"search\n"
~"section\n"
~"select-frame\n"
~"set\n"
~"sharedlibrary\n"
~"shell\n"
~"show\n"
~"si\n"
~"signal\n"
~"skip\n"
~"source\n"
~"start\n"
~"starti\n"
~"step\n"
~"stepi\n"
~"stepping\n"
~"stop\n"
~"strace\n"
~"symbol-file\n"
~"tabset\n"
~"target\n"
~"task\n"
~"tbreak\n"
~"tcatch\n"
~"tdump\n"
~"teval\n"
~"tfind\n"
~"thbreak\n"
~"thread\n"
~"tp\n"
~"trace\n"
~"tsave\n"
~"tstart\n"
~"tstatus\n"
~"tstop\n"
~"tty\n"
~"tui\n"
~"tvariable\n"
~"undisplay\n"
~"unset\n"
~"until\n"
~"up\n"
~"up-silently\n"
~"update\n"
~"watch\n"
~" *** List may be truncated, max-completions reached. ***\n"
^done
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, main () at solution.cpp:43
~"\n\032\032frame-begin 0 0x555555554d31\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554d31",func="main",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554d31",func="main()",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="43",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:43"}]}

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="31",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
&"complete psta\n"
~"pstack\n"
^done
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f54\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f54",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="32"}
&"complete pstac\n"
~"pstack\n"
^done
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
&"complete psta\n"
~"pstack\n"
^done
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f54\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f54",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="32"}
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ed7\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ed7",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="20"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
&"complete pstac\n"
~"pstack\n"
^done
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f0d\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f0d",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="26"}
~"\n\032\032frame-begin 0 0x555555554f19\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f19",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="27"}
~"\n\032\032frame-begin 0 0x555555554f2a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f2a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="28"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
&"complete p S\n"
~"p S\n"
~"p S0\n"
~"p S01\n"
~"p S02\n"
~"p S03\n"
~"p S04\n"
~"p S1\n"
~"p S2\n"
~"p S3\n"
~"p S4\n"
~"p S5\n"
~"p S6\n"
~"p SB_CHAR\n"
~"p SCM_CREDENTIALS\n"
~"p SCM_RIGHTS\n"
~"p SEGV_ACCERR\n"
~"p SEGV_BNDERR\n"
~"p SEGV_MAPERR\n"
~"p SEGV_PKUERR\n"
~"p SHUTDOWN\n"
~"p SIMPLE_BRACKET\n"
~"p SI_ASYNCIO\n"
~"p SI_ASYNCNL\n"
~"p SI_KERNEL\n"
~"p SI_MESGQ\n"
~"p SI_QUEUE\n"
~"p SI_SIGIO\n"
~"p SI_TIMER\n"
~"p SI_TKILL\n"
~"p SI_USER\n"
~"p SMALL\n"
~"p SOCK_CLOEXEC\n"
~"p SOCK_DCCP\n"
~"p SOCK_DGRAM\n"
~"p SOCK_NONBLOCK\n"
~"p SOCK_PACKET\n"
~"p SOCK_RAW\n"
~"p SOCK_RDM\n"
~"p SOCK_SEQPACKET\n"
~"p SOCK_STREAM\n"
~"p SQRTH\n"
~"p SS0\n"
~"p SS1\n"
~"p SS_DISABLE\n"
~"p SS_ONSTACK\n"
~"p SUBEXP\n"
~"p SUCCESS\n"
~"p SVCXPRT\n"
~"p SYSTEM_ERR\n"
~"p SYS_libc.c\n"
~"p Solution\n"
~"p Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)\n"
~"p SyslogAddr\n"
~"p save_for_wbackup.isra\n"
~"p size\n"
~"p slashdot\n"
~"p sqrt_2\n"
~"p start_fct\n"
~"p startp\n"
~"p startp_initialized\n"
~"p startport\n"
~"p state\n"
~"p step0_jumps\n"
~"p step1_jumps\n"
~"p step2_jumps\n"
~"p step3a_jumps\n"
~"p step3b_jumps\n"
~"p step4_jumps\n"
~"p str_to_mpn.isra\n"
~"p sysconf_symloop_max\n"
~"p systrim.isra.1.constprop\n"
^done
&"complete pstac\n"
~"pstack\n"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
[Inferior 1 (process 20671) exited normally]
^error,msg="No registers."
^done,line="15",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
[Inferior 1 (process 20859) exited normally]
^error,msg="No registers."
^done,line="15",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
&"complete \n"
~"!\n"
~"+\n"
~"-\n"
~"<\n"
~">\n"
~"actions\n"
~"add-auto-load-safe-path\n"
~"add-auto-load-scripts-directory\n"
~"add-inferior\n"
~"add-symbol-file\n"
~"add-symbol-file-from-memory\n"
~"advance\n"
~"agent-printf\n"
~"alias\n"
~"append\n"
~"apropos\n"
~"attach\n"
~"awatch\n"
~"backtrace\n"
~"bookmark\n"
~"break\n"
~"break-range\n"
~"bt\n"
~"call\n"
~"catch\n"
~"cd\n"
~"checkpoint\n"
~"clear\n"
~"clone-inferior\n"
~"collect\n"
~"commands\n"
~"compare-sections\n"
~"compile\n"
~"complete\n"
~"condition\n"
~"continue\n"
~"core-file\n"
~"define\n"
~"delete\n"
~"demangle\n"
~"detach\n"
~"directory\n"
~"disable\n"
~"disassemble\n"
~"disconnect\n"
~"display\n"
~"document\n"
~"dont-repeat\n"
~"down\n"
~"down-silently\n"
~"downbp\n"
~"dprintf\n"
~"dump\n"
~"echo\n"
~"edit\n"
~"enable\n"
~"end\n"
~"eval\n"
~"exec-file\n"
~"explore\n"
~"expression\n"
~"file\n"
~"find\n"
~"finish\n"
~"flash-erase\n"
~"flushregs\n"
~"focus\n"
~"forward-search\n"
~"frame\n"
~"fs\n"
~"ftrace\n"
~"function\n"
~"generate-core-file\n"
~"goto-bookmark\n"
~"guile\n"
~"guile-repl\n"
~"handle\n"
~"hbreak\n"
~"help\n"
~"if\n"
~"ignore\n"
~"inferior\n"
~"info\n"
~"init-if-undefined\n"
~"interpreter-exec\n"
~"interrupt\n"
~"jit-reader-load\n"
~"jit-reader-unload\n"
~"jump\n"
~"kill\n"
~"layout\n"
~"list\n"
~"load\n"
~"loadbp\n"
~"macro\n"
~"maintenance\n"
~"make\n"
~"mem\n"
~"monitor\n"
~"myloop_print\n"
~"new-ui\n"
~"next\n"
~"nexti\n"
~"ni\n"
~"nosharedlibrary\n"
~"output\n"
~"overlay\n"
~"passcount\n"
~"path\n"
~"pbitset\n"
~"pdequeue\n"
~"plist\n"
~"plist_member\n"
~"plistnode\n"
~"pmap\n"
~"pmap_member\n"
~"ppqueue\n"
~"pqueue\n"
~"print\n"
~"print-object\n"
~"printf\n"
~"pset\n"
~"pstack\n"
~"pstring\n"
~"ptype\n"
~"pvector\n"
~"pwd\n"
~"pwstring\n"
~"python\n"
~"python-interactive\n"
~"qbp\n"
~"queue-signal\n"
~"quit\n"
~"rbreak\n"
~"rc\n"
~"record\n"
~"refresh\n"
~"remote\n"
~"remove-inferiors\n"
~"remove-symbol-file\n"
~"restart\n"
~"restore\n"
~"return\n"
~"reverse-continue\n"
~"reverse-finish\n"
~"reverse-next\n"
~"reverse-nexti\n"
~"reverse-search\n"
~"reverse-step\n"
~"reverse-stepi\n"
~"rni\n"
~"rsi\n"
~"run\n"
~"rwatch\n"
~"save\n"
~"search\n"
~"section\n"
~"select-frame\n"
~"set\n"
~"sharedlibrary\n"
~"shell\n"
~"show\n"
~"si\n"
~"signal\n"
~"skip\n"
~"source\n"
~"start\n"
~"starti\n"
~"step\n"
~"stepi\n"
~"stepping\n"
~"stop\n"
~"strace\n"
~"symbol-file\n"
~"tabset\n"
~"target\n"
~"task\n"
~"tbreak\n"
~"tcatch\n"
~"tdump\n"
~"teval\n"
~"tfind\n"
~"thbreak\n"
~"thread\n"
~"tp\n"
~"trace\n"
~"tsave\n"
~"tstart\n"
~"tstatus\n"
~"tstop\n"
~"tty\n"
~"tui\n"
~"tvariable\n"
~"undisplay\n"
~"unset\n"
~"until\n"
~"up\n"
~"up-silently\n"
~"update\n"
~"watch\n"
~" *** List may be truncated, max-completions reached. ***\n"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="4",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="4",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="4",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
[Inferior 1 (process 20860) exited normally]
^error,msg="No registers."
^done,line="15",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="4",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f54\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f54",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="32"}
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="2",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="3",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="4",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="5",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="6",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="7",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="8",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="9",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="10",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="11",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}
[Inferior 1 (process 20873) exited normally]
^error,msg="No registers."
^done,line="33",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f54\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f54",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="32"}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f54\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f54",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="32"}

Breakpoint 5, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:33
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="2",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ed7\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ed7",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="20"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f0d\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f0d",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="26"}
~"\n\032\032frame-begin 0 0x555555554f19\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f19",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="27"}
~"\n\032\032frame-begin 0 0x555555554f2a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f2a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="28"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ed7\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ed7",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="20"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
&"complete \n"
~"!\n"
~"+\n"
~"-\n"
~"<\n"
~">\n"
~"actions\n"
~"add-auto-load-safe-path\n"
~"add-auto-load-scripts-directory\n"
~"add-inferior\n"
~"add-symbol-file\n"
~"add-symbol-file-from-memory\n"
~"advance\n"
~"agent-printf\n"
~"alias\n"
~"append\n"
~"apropos\n"
~"attach\n"
~"awatch\n"
~"backtrace\n"
~"bookmark\n"
~"break\n"
~"break-range\n"
~"bt\n"
~"call\n"
~"catch\n"
~"cd\n"
~"checkpoint\n"
~"clear\n"
~"clone-inferior\n"
~"collect\n"
~"commands\n"
~"compare-sections\n"
~"compile\n"
~"complete\n"
~"condition\n"
~"continue\n"
~"core-file\n"
~"define\n"
~"delete\n"
~"demangle\n"
~"detach\n"
~"directory\n"
~"disable\n"
~"disassemble\n"
~"disconnect\n"
~"display\n"
~"document\n"
~"dont-repeat\n"
~"down\n"
~"down-silently\n"
~"downbp\n"
~"dprintf\n"
~"dump\n"
~"echo\n"
~"edit\n"
~"enable\n"
~"end\n"
~"eval\n"
~"exec-file\n"
~"explore\n"
~"expression\n"
~"file\n"
~"find\n"
~"finish\n"
~"flash-erase\n"
~"flushregs\n"
~"focus\n"
~"forward-search\n"
~"frame\n"
~"fs\n"
~"ftrace\n"
~"function\n"
~"generate-core-file\n"
~"goto-bookmark\n"
~"guile\n"
~"guile-repl\n"
~"handle\n"
~"hbreak\n"
~"help\n"
~"if\n"
~"ignore\n"
~"inferior\n"
~"info\n"
~"init-if-undefined\n"
~"interpreter-exec\n"
~"interrupt\n"
~"jit-reader-load\n"
~"jit-reader-unload\n"
~"jump\n"
~"kill\n"
~"layout\n"
~"list\n"
~"load\n"
~"loadbp\n"
~"macro\n"
~"maintenance\n"
~"make\n"
~"mem\n"
~"monitor\n"
~"myloop_print\n"
~"new-ui\n"
~"next\n"
~"nexti\n"
~"ni\n"
~"nosharedlibrary\n"
~"output\n"
~"overlay\n"
~"passcount\n"
~"path\n"
~"pbitset\n"
~"pdequeue\n"
~"plist\n"
~"plist_member\n"
~"plistnode\n"
~"pmap\n"
~"pmap_member\n"
~"ppqueue\n"
~"pqueue\n"
~"print\n"
~"print-object\n"
~"printf\n"
~"pset\n"
~"pstack\n"
~"pstring\n"
~"ptype\n"
~"pvector\n"
~"pwd\n"
~"pwstring\n"
~"python\n"
~"python-interactive\n"
~"qbp\n"
~"queue-signal\n"
~"quit\n"
~"rbreak\n"
~"rc\n"
~"record\n"
~"refresh\n"
~"remote\n"
~"remove-inferiors\n"
~"remove-symbol-file\n"
~"restart\n"
~"restore\n"
~"return\n"
~"reverse-continue\n"
~"reverse-finish\n"
~"reverse-next\n"
~"reverse-nexti\n"
~"reverse-search\n"
~"reverse-step\n"
~"reverse-stepi\n"
~"rni\n"
~"rsi\n"
~"run\n"
~"rwatch\n"
~"save\n"
~"search\n"
~"section\n"
~"select-frame\n"
~"set\n"
~"sharedlibrary\n"
~"shell\n"
~"show\n"
~"si\n"
~"signal\n"
~"skip\n"
~"source\n"
~"start\n"
~"starti\n"
~"step\n"
~"stepi\n"
~"stepping\n"
~"stop\n"
~"strace\n"
~"symbol-file\n"
~"tabset\n"
~"target\n"
~"task\n"
~"tbreak\n"
~"tcatch\n"
~"tdump\n"
~"teval\n"
~"tfind\n"
~"thbreak\n"
~"thread\n"
~"tp\n"
~"trace\n"
~"tsave\n"
~"tstart\n"
~"tstatus\n"
~"tstop\n"
~"tty\n"
~"tui\n"
~"tvariable\n"
~"undisplay\n"
~"unset\n"
~"until\n"
~"up\n"
~"up-silently\n"
~"update\n"
~"watch\n"
~" *** List may be truncated, max-completions reached. ***\n"
^done
Watchpoint 6: S~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="6",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="2",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"},bkpt={number="6",type="watchpoint",disp="keep",enabled="y",what="S",thread-groups=["i1"],times="0",original-location="S"}]}

Watchpoint 6: S
Old value = std::stack wrapping: std::deque with 2 elements = {[0] = 1, [1] = 4}
New value = std::stack wrapping: std::deque with 1 element = {[0] = 1}
std::deque<int, std::allocator<int> >::pop_back (this=0x7fffffffda00) at /usr/include/c++/7/bits/stl_deque.h:1608
~"\n\032\032frame-begin 0 0x55555555535f\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555535f",func="std::deque<int, std::allocator<int> >::pop_back",file="/usr/include/c++/7/bits/stl_deque.h",fullname="/usr/include/c++/7/bits/stl_deque.h",line="1608"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="6",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="2",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"},bkpt={number="6",type="watchpoint",disp="keep",enabled="y",what="S",thread-groups=["i1"],times="1",original-location="S"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="5",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstact S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","continue"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554f60",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:33"}]}

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="31",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
Watchpoint 2: S~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="watchpoint",disp="keep",enabled="y",what="S",thread-groups=["i1"],times="0",original-location="S"}]}

Watchpoint 2: S
Old value = std::stack wrapping: std::deque with 1 element = {[0] = -1}
New value = std::stack wrapping: std::deque with 0 elements
std::deque<int, std::allocator<int> >::pop_back (this=0x7fffffffda00) at /usr/include/c++/7/bits/stl_deque.h:1608
~"\n\032\032frame-begin 0 0x55555555535f\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555535f",func="std::deque<int, std::allocator<int> >::pop_back",file="/usr/include/c++/7/bits/stl_deque.h",fullname="/usr/include/c++/7/bits/stl_deque.h",line="1608"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="watchpoint",disp="keep",enabled="y",what="S",thread-groups=["i1"],times="1",original-location="S"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"silent","printf \"i is:%d \\n\",i","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18
[Inferior 1 (process 20971) exited normally]
^error,msg="No registers."
^done,line="18",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="17",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="17",script={"silent","printf \"i is:%d \\n\",i","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"silent","printf \"i is:%d \\n\",i","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18
[Inferior 1 (process 20983) exited normally]
^error,msg="No registers."
^done,line="18",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="17",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="17",script={"silent","printf \"i is:%d \\n\",i","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 1, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"silent","printf \"i is:%d \\n\",i","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"silent","pstack S","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffda8b, s="))()())()))))))))") at solution.cpp:18
[Inferior 1 (process 20984) exited normally]
^error,msg="No registers."
^done,line="18",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="17",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="17",script={"silent","pstack S","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="31",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",script={"silent","pstack S","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 
[Inferior 1 (process 21005) exited normally]
^error,msg="No registers."
^done,line="15",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 
[Inferior 1 (process 21009) exited normally]
^error,msg="No registers."
^done,line="15",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 
[Inferior 1 (process 21011) exited normally]
^error,msg="No registers."
^done,line="15",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","pstack S","cont"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="31",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
[Inferior 1 (process 21018) exited normally]
^error,msg="No registers."
^done,line="15",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="0",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 2, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
[Inferior 1 (process 21022) exited normally]
^error,msg="No registers."
^done,line="15",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 2, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"}]}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f54\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f54",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="32"}
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f54\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f54",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="32"}
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ed7\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ed7",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="20"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f0d\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f0d",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="26"}
~"\n\032\032frame-begin 0 0x555555554f19\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f19",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="27"}
~"\n\032\032frame-begin 0 0x555555554f2a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f2a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="28"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ed7\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ed7",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="20"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f0d\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f0d",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="26"}
~"\n\032\032frame-begin 0 0x555555554f19\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f19",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="27"}
~"\n\032\032frame-begin 0 0x555555554f2a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f2a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="28"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f54\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f54",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="32"}
~"\n\032\032frame-begin 0 0x555555554f60\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f60",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="33"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032frame-begin 0 0x555555554ed7\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ed7",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="20"}
~"\n\032\032frame-begin 0 0x555555554f7a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f7a",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
[Inferior 1 (process 21023) exited normally]
^error,msg="No registers."
^done,line="15",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",macro-info="0"
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="0",script={"printf \"i is:%d\\n\",i","printf \"s %s\\n\",s","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 2, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:15
~"\n\032\032frame-begin 0 0x555555554e89\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554e89",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="0",script={"printf \"i is:%d\\n\",i","printf \"s %s\\n\",s","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="1",script={"printf \"i is:%d\\n\",i","printf \"s %s\\n\",s","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="2",script={"printf \"i is:%d\\n\",i","printf \"s %s\\n\",s","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="3",script={"printf \"i is:%d\\n\",i","printf \"s %s\\n\",s","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="4",script={"printf \"i is:%d\\n\",i","printf \"s %s\\n\",s","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="5",script={"printf \"i is:%d\\n\",i","printf \"s %s\\n\",s","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="6",script={"printf \"i is:%d\\n\",i","printf \"s %s\\n\",s","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="7",script={"printf \"i is:%d\\n\",i","printf \"s %s\\n\",s","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="7",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="8",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="9",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="10",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="11",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="12",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="13",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}

Breakpoint 3, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:17
~"\n\032\032frame-begin 0 0x555555554eaf\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554eaf",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="14",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="4",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554eaf",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="17",thread-groups=["i1"],times="14",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:17"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"silent","p i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554e89",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="15",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d\\n\",i","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:15"},bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}

Breakpoint 4, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 4, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032frame-begin 0 0x555555554ef6\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ef6",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x555555554f54\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554f54",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="32"}

Breakpoint 4, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="2",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
&"complete soure .gdb_b\n"
^done
&"complete source .gdb_b\n"
~"source .gdb_bp\n"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="2",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S","p ans"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 4, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="2",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S","p ans"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S","p ans"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 4, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="3",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S","p ans"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
&"complete source .gdb_b\n"
~"source .gdb_bp\n"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="4",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S","p ans"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="7",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 4, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="4",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for i=%d,\\n\",i","printf \"current char=%c,\\n\",ch","pstack S","p ans"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"},bkpt={number="7",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="8",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 8, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="8",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="9",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","print \"stack S\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 9, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="9",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","print \"stack S\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="10",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S\\n\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 10, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="10",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S\\n\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="11",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\\n\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/a.out 

Breakpoint 11, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="11",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="1",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\\n\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}

Breakpoint 11, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="11",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="2",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\\n\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}

Breakpoint 11, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="11",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="3",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\\n\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}

Breakpoint 11, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="11",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="4",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\\n\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}

Breakpoint 11, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="11",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="5",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\\n\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}

Breakpoint 11, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="11",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="6",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\\n\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}

Breakpoint 11, Solution::longestValidParentheses (this=0x7fffffffdaab, s="))()())()))))))))") at solution.cpp:18
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="11",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554ece",func="Solution::longestValidParentheses(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18",thread-groups=["i1"],times="7",script={"printf \"loop for: i=%d,ch=%c,ans=%d\\n\",i,ch,ans","printf \"stack S:\\n\"","pstack S"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp:18"}]}
~"\n\032\032frame-begin 0 0x555555554ece\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554ece",func="Solution::longestValidParentheses",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/032.Longest-Valid-Parentheses/solution.cpp",line="18"}
