pi RelativeFunctionBreakpoint("Solution1::trap", lineOffset=6)
  commands
    printf "=======================\n"
    printf "--------A--------------\n"
    p *A@n
    printf "--------left--------------\n"
    p *left@n
  end
pi RelativeFunctionBreakpoint("Solution1::trap", lineOffset=15)
  commands
    printf "=======================\n"
    printf "--------A--------------\n"
    p *A@n
    printf "--------right--------------\n"
    p *right@n
  end
pi RelativeFunctionBreakpoint("Solution1::trap", lineOffset=24)
  commands
    printf "=======================\n"
    printf "--------temp=%d--------------\n",temp
    printf "--------result=%d--------------\n",result
  end
pi RelativeFunctionBreakpoint("Solution3::trap", lineOffset=4)
  commands
    printf "=======================\n"
    printf "--------l=%d,r=%d,height[l]=%d,height[r]=%d,res=%d--------------\n",l,r,height[l],height[r],res
  end
pi RelativeFunctionBreakpoint("Solution4::trap", lineOffset=3)
  commands
    printf "=======================\n"
    printf "--------l=%d,r=%d,height[l]=%d,height[r]=%d,res=%d--------------\n",l,r,height[l],height[r],res
  end
pi RelativeFunctionBreakpoint("Solution5::trap", lineOffset=4)
  commands
    printf "=======================\n"
    if st.empty()
        printf "--------t=x,i=%d,ht[t]=x,ht[i]=%d,res=%d--------------\n",i,height[i],res
    else                                       
        printf "--------t=%d,i=%d,ht[t]=%d,ht[i]=%d,res=%d--------------\n",st.top(),i,height[st.top()],height[i],res
    end
    pstack st
  end
