
warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="28",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",macro-info="0"
^done
&"complete sour\n"
~"source\n"
^done
&"complete source .g\n"
~"source .gdb_bp\n"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000708",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p A","printf   \"----------i=%d--------------------\\n\",i"},original-location="*Solution::firstMissingPositive+2"}]}
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000000000000709",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p A","printf   \"----------i=%d--------------------\\n\",i"},original-location="*Solution::firstMissingPositive+3"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 
[Inferior 1 (process 30067) exited with code 01]
^error,msg="No registers."
^done,line="28",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",macro-info="0"
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="2",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554709",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="18",thread-groups=["i1"],times="0",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p A","printf   \"----------i=%d--------------------\\n\",i"},original-location="*Solution::firstMissingPositive+3"}]}
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
&"complete de\n"
~"define\n"
~"delete\n"
~"demangle\n"
~"detach\n"
^done
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 
[Inferior 1 (process 30077) exited normally]
^error,msg="No registers."
^done,line="28",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",macro-info="0"
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 
[Inferior 1 (process 30078) exited normally]
^error,msg="No registers."
^done,line="28",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",macro-info="0"
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 
[Inferior 1 (process 30192) exited normally]
^error,msg="No registers."
^done,line="28",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",macro-info="0"
&"complete b fir\n"
~"b firstMissingPositive(int*, int)\n"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554719",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="20",thread-groups=["i1"],times="0",original-location="firstMissingPositive"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 

Breakpoint 3, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:20
~"\n\032\032frame-begin 0 0x555555554719\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554719",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="20"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="3",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554719",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="20",thread-groups=["i1"],times="1",original-location="firstMissingPositive"}]}
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
&"complete b *fir\n"
^done
&"complete b first\n"
~"b firstMissingPositive(int*, int)\n"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="4",type="breakpoint",disp="keep",enabled="y",addr="0x0000555555554719",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="20",thread-groups=["i1"],times="0",original-location="firstMissingPositive(int*, int)"}]}
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="0",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p A","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 

Breakpoint 5, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="5",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="1",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p A","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
&"complete pve\n"
~"pvector\n"
^done
&"complete pa\n"
~"passcount\n"
~"path\n"
^done
&"complete par\n"
^done
&"complete p *A@\n"
~"p *A@GLIBC_2.2.5\n"
~"p *A@GLIBC_2.3\n"
~"p *A@GLIBC_2.4\n"
~"p *A@GLIBC_PRIVATE\n"
~"p *A@Solution::firstMissingPositive(int*, int)\n"
~"p *A@Solution::swap(int&, int&)\n"
~"p *A@_DYNAMIC\n"
~"p *A@_GLOBAL_OFFSET_TABLE_\n"
~"p *A@_IO_stdin_used\n"
~"p *A@__FRAME_END__\n"
~"p *A@__GI___assert_fail\n"
~"p *A@__GI___assert_perror_fail\n"
~"p *A@__GI___chk_fail\n"
~"p *A@__GI___libc_fatal\n"
~"p *A@__GI___tls_get_addr\n"
~"p *A@__GI___tunable_get_val\n"
~"p *A@__GI___tunables_init\n"
~"p *A@__GI__dl_allocate_tls\n"
~"p *A@__GI__dl_allocate_tls_init\n"
~"p *A@__GI__dl_deallocate_tls\n"
~"p *A@__GI__dl_debug_state\n"
~"p *A@__GI__dl_exception_create\n"
~"p *A@__GI__dl_exception_create_format\n"
~"p *A@__GI__dl_exception_free\n"
~"p *A@__GI__dl_find_dso_for_object\n"
~"p *A@__GI__dl_make_stack_executable\n"
~"p *A@__GI__dl_mcount\n"
~"p *A@__GNU_EH_FRAME_HDR\n"
~"p *A@__TMC_END__\n"
~"p *A@___tls_get_addr\n"
~"p *A@__assert_fail\n"
~"p *A@__assert_perror_fail\n"
~"p *A@__bss_start\n"
~"p *A@__chk_fail\n"
~"p *A@__cxa_finalize\n"
~"p *A@__cxa_finalize@plt\n"
~"p *A@__data_start\n"
~"p *A@__do_global_dtors_aux\n"
~"p *A@__do_global_dtors_aux_fini_array_entry\n"
~"p *A@__dso_handle\n"
~"p *A@__ehdr_start\n"
~"p *A@__frame_dummy_init_array_entry\n"
~"p *A@__get_cpu_features\n"
~"p *A@__init_array_end\n"
~"p *A@__init_array_start\n"
~"p *A@__libc_csu_fini\n"
~"p *A@__libc_csu_init\n"
~"p *A@__libc_fatal\n"
~"p *A@__sigjmp_save\n"
~"p *A@__stack_chk_fail\n"
~"p *A@__stack_chk_fail@plt\n"
~"p *A@__strerror_r\n"
~"p *A@__strsep\n"
~"p *A@__strsep_g\n"
~"p *A@__tls_get_addr\n"
~"p *A@__tls_get_addr_slow\n"
~"p *A@__tunable_get_val\n"
~"p *A@__tunable_set_val\n"
~"p *A@_begin\n"
~"p *A@_dl_add_to_namespace_list\n"
~"p *A@_dl_add_to_slotinfo\n"
~"p *A@_dl_allocate_static_tls\n"
~"p *A@_dl_allocate_tls\n"
~"p *A@_dl_allocate_tls_init\n"
~"p *A@_dl_allocate_tls_storage\n"
~"p *A@_dl_build_local_scope\n"
~"p *A@_dl_cache_libcmp\n"
~"p *A@_dl_call_pltexit\n"
~"p *A@_dl_check_all_versions\n"
~"p *A@_dl_check_caller\n"
~"p *A@_dl_check_map_versions\n"
~"p *A@_dl_close\n"
~"p *A@_dl_close_worker\n"
~"p *A@_dl_close_worker.part.0\n"
~"p *A@_dl_count_modids\n"
~"p *A@_dl_deallocate_tls\n"
~"p *A@_dl_debug_initialize\n"
~"p *A@_dl_debug_printf\n"
~"p *A@_dl_debug_printf_c\n"
~"p *A@_dl_debug_state\n"
~"p *A@_dl_debug_vdprintf\n"
~"p *A@_dl_determine_tlsoffset\n"
~"p *A@_dl_discover_osversion\n"
~"p *A@_dl_dprintf\n"
~"p *A@_dl_dst_count\n"
~"p *A@_dl_dst_substitute\n"
~"p *A@_dl_exception_create\n"
~"p *A@_dl_exception_create_format\n"
~"p *A@_dl_exception_free\n"
~"p *A@_dl_find_dso_for_object\n"
~"p *A@_dl_fini\n"
~"p *A@_dl_fixup\n"
~"p *A@_dl_get_origin\n"
~"p *A@_dl_get_tls_static_info\n"
~"p *A@_dl_higher_prime_number\n"
~"p *A@_dl_important_hwcaps\n"
~"p *A@_dl_init\n"
~"p *A@_dl_init_paths\n"
~"p *A@_dl_load_cache_lookup\n"
~"p *A@_dl_lookup_symbol_x\n"
~"p *A@_dl_make_stack_executable\n"
~"p *A@_dl_make_tlsdesc_dynamic\n"
~"p *A@_dl_map_object\n"
~"p *A@_dl_map_object_deps\n"
~"p *A@_dl_map_object_from_fd\n"
~"p *A@_dl_mcount\n"
~"p *A@_dl_name_match_p\n"
~"p *A@_dl_new_object\n"
~"p *A@_dl_next_ld_env_entry\n"
~"p *A@_dl_next_tls_modid\n"
~"p *A@_dl_nothread_init_static_tls\n"
~"p *A@_dl_open\n"
~"p *A@_dl_profile_fixup\n"
~"p *A@_dl_protect_relro\n"
~"p *A@_dl_reloc_bad_type\n"
~"p *A@_dl_relocate_object\n"
~"p *A@_dl_rtld_di_serinfo\n"
~"p *A@_dl_runtime_profile_avx\n"
~"p *A@_dl_runtime_profile_avx512\n"
~"p *A@_dl_runtime_profile_sse\n"
~"p *A@_dl_runtime_resolve_fxsave\n"
~"p *A@_dl_runtime_resolve_xsave\n"
~"p *A@_dl_runtime_resolve_xsavec\n"
~"p *A@_dl_scope_free\n"
~"p *A@_dl_setup_hash\n"
~"p *A@_dl_show_auxv\n"
~"p *A@_dl_show_scope\n"
~"p *A@_dl_signal_exception\n"
~"p *A@_dl_sort_maps\n"
~"p *A@_dl_start\n"
~"p *A@_dl_start_profile\n"
~"p *A@_dl_start_user\n"
~"p *A@_dl_strtoul\n"
~"p *A@_dl_sysdep_read_whole_file\n"
~"p *A@_dl_sysdep_start\n"
~"p *A@_dl_sysdep_start_cleanup\n"
~"p *A@_dl_tls_get_addr_soft\n"
~"p *A@_dl_tlsdesc_dynamic\n"
~"p *A@_dl_tlsdesc_resolve_hold\n"
~"p *A@_dl_tlsdesc_resolve_hold_fixup\n"
~"p *A@_dl_tlsdesc_resolve_rela\n"
~"p *A@_dl_tlsdesc_resolve_rela_fixup\n"
~"p *A@_dl_tlsdesc_return\n"
~"p *A@_dl_tlsdesc_undefweak\n"
~"p *A@_dl_try_allocate_static_tls\n"
~"p *A@_dl_tunable_set_hwcaps\n"
~"p *A@_dl_unload_cache\n"
~"p *A@_dl_unmap\n"
~"p *A@_dl_update_slotinfo\n"
~"p *A@_edata\n"
~"p *A@_end\n"
~"p *A@_fini\n"
~"p *A@_init\n"
~"p *A@_itoa\n"
~"p *A@_start\n"
~"p *A@add_to_global\n"
~"p *A@calloc\n"
~"p *A@completed\n"
~"p *A@data_start\n"
~"p *A@decompose_rpath\n"
~"p *A@deregister_tm_clones\n"
~"p *A@dl_main\n"
~"p *A@dl_open_worker\n"
~"p *A@dlmopen_doit\n"
~"p *A@do_lookup_x\n"
~"p *A@do_preload\n"
~"p *A@expand_dynamic_string_token\n"
~"p *A@fatal_error\n"
~"p *A@fillin_rpath\n"
~"p *A@frame_dummy\n"
~"p *A@free\n"
~"p *A@get_common_indeces.constprop\n"
~"p *A@handle_ld_preload\n"
~"p *A@init_tls\n"
~"p *A@is_trusted_path_normalize\n"
~"p *A@length_mismatch\n"
~"p *A@lookup_doit\n"
~"p *A@lose\n"
~"p *A@main\n"
~"p *A@malloc\n"
~"p *A@map_doit\n"
~"p *A@oom\n"
~"p *A@open_path\n"
~"p *A@open_verify.constprop\n"
~"p *A@openaux\n"
~"p *A@print_missing_version\n"
~"p *A@print_statistics\n"
~"p *A@print_unresolved\n"
~"p *A@process_dl_debug\n"
~"p *A@realloc\n"
~"p *A@register_tm_clones\n"
~"p *A@relocate_doit\n"
~"p *A@remove_slotinfo\n"
~"p *A@rtld_lock_default_lock_recursive\n"
~"p *A@rtld_lock_default_unlock_recursive\n"
~"p *A@strsep\n"
~"p *A@tls_get_addr_tail\n"
~"p *A@unsetenv\n"
~"p *A@update_get_addr\n"
~"p *A@version_check_doit\n"
~"p *A@ *** List may be truncated, max-completions reached. ***\n"
^done
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="0",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="1",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="2",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="3",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="4",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="5",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="6",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
[Inferior 1 (process 30230) exited normally]
^error,msg="No registers."
^done,line="22",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",macro-info="0"
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="1",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="2",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
~"\n\032\032frame-begin 0 0x555555554750\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554750",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x55555555481f\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555481f",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="20"}

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="3",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
~"\n\032\032frame-begin 0 0x555555554750\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554750",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x55555555481f\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555481f",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="20"}

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="4",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
~"\n\032\032frame-begin 0 0x55555555481f\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555481f",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="20"}

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="5",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
~"\n\032\032frame-begin 0 0x555555554750\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554750",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x5555555547d0\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x00005555555547d0",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="26"}
~"\n\032\032frame-begin 0 0x55555555481a\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555481a",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="6",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
~"\n\032\032frame-begin 0 0x555555554750\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554750",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="24"}
~"\n\032\032frame-begin 0 0x55555555481f\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555481f",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="20"}
~"\n\032\032frame-begin 0 0x555555554828\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554828",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="29"}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 

Breakpoint 6, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="6",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="1",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="28",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",macro-info="0"
^done
&"complete sour\n"
~"source\n"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x000000000000072c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="0",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 

Breakpoint 1, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="1",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.

warning: Currently logging to ./.log.txt.  Turn the logging off and on to make the new setting effective.
Reading symbols from a.out...done.

post-prompt
^done,asm_insns=[]
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="0",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="10",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[]}
^error,msg="No registers."
^done,line="28",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",macro-info="0"
^done
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x000000000000072c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="0",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
Starting program: /home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/a.out 

Breakpoint 1, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="1",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
~"\n\032\032frame-begin 0 0x555555554750\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x0000555555554750",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="24"}

Breakpoint 1, Solution::firstMissingPositive (this=0x7fffffffdadb, A=0x7fffffffdae0, n=4) at solution.cpp:22
~"\n\032\032frame-begin 0 0x55555555472c\n"
~"\n\032\032frame-address\n"
~"\n\032\032frame-address-end\n"
~"\n\032\032frame-function-name\n"
~"\n\032\032frame-args\n"
~"\n\032\032frame-source-begin\n"
~"\n\032\032frame-source-file\n"
~"\n\032\032frame-source-file-end\n"
~"\n\032\032frame-source-line\n"
~"\n\032\032frame-source-end\n"
~"\n\032\032frame-end\n"
^done,frame={level="0",addr="0x000055555555472c",func="Solution::firstMissingPositive",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22"}
~"\n\032\032breakpoints-headers\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032breakpoints-table\n"
~"\n\032\032record\n"
~"\n\032\032field 0\n"
~"\n\032\032field 1\n"
~"\n\032\032field 2\n"
~"\n\032\032field 3\n"
~"\n\032\032field 4\n"
~"\n\032\032field 5\n"
~"\n\032\032field 9\n"
~"\n\032\032breakpoints-table-end\n"
^done,BreakpointTable={nr_rows="1",nr_cols="6",hdr=[{width="7",alignment="-1",col_name="number",colhdr="Num"},{width="14",alignment="-1",col_name="type",colhdr="Type"},{width="4",alignment="-1",col_name="disp",colhdr="Disp"},{width="3",alignment="-1",col_name="enabled",colhdr="Enb"},{width="18",alignment="-1",col_name="addr",colhdr="Address"},{width="40",alignment="2",col_name="what",colhdr="What"}],body=[bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x000055555555472c",func="Solution::firstMissingPositive(int*, int)",file="solution.cpp",fullname="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp",line="22",thread-groups=["i1"],times="2",script={"printf   \"========================================\\n\"","printf   \"----------A--------------------\\n\"","p *A@n","printf   \"----------i=%d--------------------\\n\",i"},original-location="/home/dc/5W/algorithm/LeetCode-NOTES/Algorithms/041.First-Missing-Positive/solution.cpp:22"}]}
